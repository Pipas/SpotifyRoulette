{"version":3,"sources":["images/search.svg","images/settings.svg","images/roulette.svg","images/reload.svg","images/reshoot.svg","images/warning.svg","images/close.svg","images/logo.png","components/roulette/Roulette.tsx","utils/Spoitfy.ts","components/searchBar/SearchBar.tsx","components/roulette/RouletteAlbum.tsx","components/app/App.tsx","components/actionButtons/ActionButtons.tsx","utils/ContextController.ts","components/warningDialog/WarningDialog.tsx","components/settingChips/SettingChips.tsx","components/settings/Settings.tsx","components/searchResults/Result.tsx","components/searchResults/Results.tsx","components/title/Title.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","LoadState","Spotify","controller","Object","classCallCheck","this","client","auth","deviceId","SpotifyWebApi","createClass","key","value","access_token","window","location","hash","substring","split","setAccessToken","href","concat","join","_search","asyncToGenerator","regenerator_default","a","mark","_callee","query","wrap","_context","prev","next","search","abrupt","sent","stop","_x","apply","arguments","item","undefined","setShuffle","shuffle","play","objectSpread","device_id","playParameters","catch","_hasPlayerOpen","_callee2","devices","_context2","getMyDevices","length","id","SearchBar","props","searchInput","useRef","_useState","useState","_useState2","slicedToArray","setQuery","onSearchClick","useCallback","onSearch","useEffect","input","current","onKeypress","e","addEventListener","removeEventListener","locked","react_default","createElement","className","onClick","src","SearchLogo","alt","type","ref","onChange","target","onQueryChange","placeholder","tooltip","disabled","settingsGear","onSettingsClick","RouletteAlbum","loadSound","Howl","useLoadSound","loading","position","shotSound","useShootSound","shot","style","transform","load","BulletType","RouletteState","Roulette","_useState3","_useState4","chosenShot","setChosenShot","_useState5","_useState6","angle","setAngle","_useState7","EMPTY","_useState8","loadState","setLoadState","_useLoadShots","chooseBullet","loadedShots","setLoadedShots","setTimeout","incrementShot","useLoadShots","_useLoadShots2","loadShots","resetLoadShots","useSpinSound","state","SPINING","albums","blank","bullet","map","i","roulette_RouletteAlbum","image","SHOOTING","LOADING","loadRoulette","callback","waitTime","setState","resetRoulette","setCSSPreviousAngle","n","document","documentElement","setProperty","LOAD","HALF","IDLE","READY","FULL","SPIN","randomShot","randomChosenShot","onShoot","SHOT","RESET","Math","floor","random","roulette","ActionButtons","visible","onResetClick","reload","onRerollClick","reshoot","SearchResult","display","results","TrackController","tracks","searchTracks","items","slice","formatResult","_x2","track","title","name","author","artists","album","images","url","uris","uri","AlbumController","_search2","searchAlbums","_x3","_x4","context_uri","ArtistController","_search3","_callee3","_context3","searchArtists","_x5","_x6","artist","WarningDialog","warning","onRetryClick","onContinueClick","SettingChips","chips","chip","selected","onSelect","toggleVisibility","stopPropagation","components_settingChips_SettingChips","bulletType","setBulletType","close","Result","Results","resultElements","searchResult","result","searchResults_Result","assign","onResultClick","Title","logo","App","spotify","setBullet","_useState9","_useState10","setBlank","_useState11","Songs","_useState12","_useState13","_useState14","setSearchResult","_usePlayerOpen","playerOpen","setPlayerOpen","checkPlayerOpen","hasPlayerOpen","then","isOpen","usePlayerOpen","_usePlayerOpen2","_useSettingsOpen","settingsOpen","setSettingsOpen","useSettingsOpen","_useSettingsOpen2","toggleSettingsOpen","setController","Albums","Artists","isAuthenticated","authenticateUser","components_title_Title","components_searchBar_SearchBar","resolveTooltip","components_searchResults_Results","components_actionButtons_ActionButtons","components_roulette_Roulette","isBullet","components_warningDialog_WarningDialog","settings_Settings","Boolean","hostname","match","ReactDOM","render","components_app_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cf47448b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.9df51d4e.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.85c5dd08.svg\";","module.exports = __webpack_public_path__ + \"static/media/roulette.dc8d006c.svg\";","module.exports = __webpack_public_path__ + \"static/media/reload.2991144a.svg\";","module.exports = __webpack_public_path__ + \"static/media/reshoot.99a86319.svg\";","module.exports = __webpack_public_path__ + \"static/media/warning.6b87cfa4.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.e85191c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.7fee23ab.png\";","import React, { useState, useEffect, useRef } from 'react'\nimport { Howl } from 'howler'\nimport './Roulette.css'\nimport roulette from '../../images/roulette.svg'\nimport RouletteAlbum from './RouletteAlbum'\nimport { RouletteState } from '../app/App'\nimport { SpotifyItem } from '../../utils/ContextController';\n\nenum LoadState {\n  EMPTY = 'empty',\n  HALF = 'half',\n  FULL = 'full'\n}\n\ntype RouletteProps = {\n  blank: SpotifyItem | undefined\n  bullet: SpotifyItem | undefined\n  state: RouletteState\n  setState: React.Dispatch<React.SetStateAction<RouletteState>>\n  chooseBullet: boolean\n  onShoot: (isBullet: boolean) => void\n}\n\nconst useSpinSound = (play: boolean) => {\n  const loadSound = useRef<Howl>(\n    new Howl({\n      src: '/audio/spin.mp3'\n    })\n  )\n\n  useEffect(() => {\n    if (play) loadSound.current.play()\n  }, [play])\n}\n\nconst useLoadShots = (chooseBullet: boolean): [number, () => void, () => void] => {\n  const [loadedShots, setLoadedShots] = useState(-1)\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (chooseBullet) {\n        if (loadedShots >= 0 && loadedShots < 4) incrementShot()\n        if (loadedShots === 5) incrementShot()\n      } else {\n        if (loadedShots >= 0 && loadedShots < 6) incrementShot()\n      }\n    }, 1500)\n  }, [loadedShots, chooseBullet])\n\n  const incrementShot = (): void =>\n    setLoadedShots(loadedShots => loadedShots + 1)\n\n  const resetLoadShots = () => setLoadedShots(-1)\n\n  return [loadedShots, incrementShot, resetLoadShots]\n}\n\nconst Roulette: React.FC<RouletteProps> = props => {\n  const [chosenShot, setChosenShot] = useState(-1)\n  const [angle, setAngle] = useState(0)\n  const [loadState, setLoadState] = useState(LoadState.EMPTY)\n  const [loadedShots, loadShots, resetLoadShots] = useLoadShots(props.chooseBullet)\n\n  useSpinSound(props.state === RouletteState.SPINING)\n\n  const albums = [\n    props.blank,\n    props.blank,\n    props.blank,\n    props.blank,\n    props.blank,\n    props.bullet\n  ].map((item, i) => (\n    <RouletteAlbum\n      key={i}\n      src={item !== undefined ? item.image : ''}\n      position={i}\n      shot={i === chosenShot && props.state === RouletteState.SHOOTING}\n      load={i <= loadedShots}\n      loading={i === loadedShots && props.state === RouletteState.LOADING}\n    />\n  ))\n\n  // Loads shots and calls callback after waitTime\n  const loadRoulette = (callback: () => void, waitTime: number): void => {\n    loadShots()\n\n    setTimeout(() => {\n      callback()\n    }, waitTime)\n\n    props.setState(RouletteState.LOADING)\n  }\n\n  const resetRoulette = (): void => {\n    setChosenShot(-1)\n    setAngle(0)\n    resetLoadShots()\n    setLoadState(LoadState.EMPTY)\n  }\n\n  const setCSSPreviousAngle = (n: number) => {\n    document.documentElement.style.setProperty('--previous', `${n}`)\n  }\n\n  useEffect(() => {\n    if (props.state === RouletteState.LOAD) {\n      if (props.chooseBullet) {\n        if (loadState === LoadState.EMPTY) {\n          loadRoulette(() => {\n            setLoadState(LoadState.HALF)\n            setAngle(5)\n            props.setState(RouletteState.IDLE)\n          }, 7500)\n        } else if (loadState === LoadState.HALF) {\n          loadRoulette(() => {\n            props.setState(RouletteState.READY)\n            setLoadState(LoadState.FULL)\n            setCSSPreviousAngle(5)\n          }, 500)\n        } else {\n          resetRoulette()\n        }\n      } else {\n        resetRoulette()\n\n        loadRoulette(() => {\n          setAngle(5)\n          props.setState(RouletteState.READY)\n          setLoadState(LoadState.FULL)\n          setCSSPreviousAngle(5)\n        }, 8300)\n      }\n    } else if (props.state === RouletteState.SPIN && loadState === LoadState.FULL) {\n      const randomShot = randomChosenShot()\n\n      setTimeout(() => {\n        setAngle(randomShot)\n        props.setState(RouletteState.SHOOTING)\n      }, 1700)\n\n      props.setState(RouletteState.SPINING)\n    } else if (props.state === RouletteState.SHOOTING) {\n      setCSSPreviousAngle(chosenShot)\n      props.onShoot(chosenShot === 5)\n      props.setState(RouletteState.SHOT)\n    } else if (props.state === RouletteState.RESET) {\n      resetRoulette()\n      props.setState(RouletteState.IDLE)\n    }\n  })\n\n  const randomChosenShot = (): number => {\n    const randomShot = Math.floor(Math.random() * 6)\n    document.documentElement.style.setProperty('--next', `${randomShot}`)\n    setChosenShot(randomShot)\n\n    return randomShot\n  }\n\n  return (\n    <div\n      className={`roulette ${props.state} ${loadState}`}\n      style={{ transform: `rotate(calc(60deg * ${angle}))` }}\n    >\n      {albums}\n      <img src={roulette} alt=''></img>\n    </div>\n  )\n}\n\nexport default Roulette\n","import SpotifyWebApi from 'spotify-web-api-js'\nimport {\n  ContextController,\n  SearchResult,\n  SpotifyItem\n} from './ContextController'\n\nexport type SpotifyClient = SpotifyWebApi.SpotifyWebApiJs\n\nexport class Spotify {\n  private client: SpotifyClient\n  private auth: boolean = false\n  private deviceId: string = ''\n  private controller: ContextController\n\n  constructor(controller: ContextController) {\n    this.client = new SpotifyWebApi()\n    this.controller = controller\n  }\n\n  setController(controller: ContextController) {\n    this.controller = controller\n  }\n\n  authenticateUser() {\n    const access_token = window.location.hash\n      .substring(1)\n      .split('&')[0]\n      .split('=')[1]\n    window.location.hash = ''\n\n    const authEndpoint = 'https://accounts.spotify.com/authorize'\n    const clientId = '41e10dc3f3594667b190b3681fdee8ca'\n    const redirectUri =\n      process.env.NODE_ENV === 'production'\n        ? 'https://spotifyroulette.paulocorreia.me'\n        : 'http://localhost:3000/'\n    const scopes = [\n      'user-top-read',\n      'user-modify-playback-state',\n      'user-read-playback-state'\n    ]\n\n    // If there is no token, redirect to Spotify authorization\n    if (!access_token) {\n      window.location.href = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n        '%20'\n      )}&response_type=token&show_dialog=true`\n    } else {\n      this.client.setAccessToken(access_token)\n      this.auth = true\n    }\n  }\n\n  async search(query: string): Promise<SearchResult> {\n    return await this.controller.search(query, this.client)\n  }\n\n  play(item: SpotifyItem | undefined) {\n    if (this.deviceId !== '' && item !== undefined) {\n      this.client.setShuffle(item.shuffle)\n      this.client.play({ device_id: this.deviceId, ...item.playParameters }).catch()\n    }\n  }\n\n  async hasPlayerOpen(): Promise<boolean> {\n    const devices = await this.client.getMyDevices()\n    if (devices.devices.length === 0) return false\n    else {\n      if (devices.devices[0].id !== null) {\n        this.deviceId = devices.devices[0].id\n        return true\n      } else return false\n    }\n  }\n\n  isAuthenticated() {\n    return this.auth\n  }\n}\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport './SearchBar.css'\nimport SearchLogo from '../../images/search.svg'\nimport settingsGear from '../../images/settings.svg'\n\ntype onChange = (event: React.ChangeEvent<HTMLInputElement>) => void\n\ntype SearchBarProps = {\n  onSearch: (query: string) => void\n  onQueryChange: () => void\n  onSettingsClick: () => void\n  locked: boolean\n  tooltip: string\n}\n\nconst SearchBar: React.FC<SearchBarProps> = props => {\n  const searchInput = useRef<HTMLInputElement>(null)\n  const [query, setQuery] = useState('')\n\n  const onSearchClick = useCallback(() => {\n    if (query !== null && query !== '') {\n      props.onSearch(query)\n    }\n  }, [query, props])\n\n  useEffect(() => {\n    const input = searchInput.current\n    const onKeypress = (e: KeyboardEvent) => {\n      if (e.key === 'Enter') onSearchClick()\n    }\n\n    if (input !== null) {\n      input.addEventListener('keypress', onKeypress)\n    }\n\n    return () => {\n      if (input !== null) {\n        input.removeEventListener('keypress', onKeypress)\n      }\n    }\n  }, [onSearchClick])\n\n  useEffect(() => {\n    if (props.locked) {\n      setQuery('')\n    }\n  }, [props.locked])\n\n  const onQueryChange: onChange = e => {\n    setQuery(e.target.value)\n    if (e.target.value === '') props.onQueryChange()\n  }\n\n  return (\n    <div className='buttonContainer'>\n      <div className='searchBar'>\n        <button onClick={onSearchClick}>\n          <img src={SearchLogo} alt=''></img>\n        </button>\n        <input\n          type='text'\n          ref={searchInput}\n          value={query}\n          onChange={onQueryChange}\n          placeholder={props.tooltip}\n          disabled={props.locked}\n        />\n      </div>\n      <img\n        className='settingsButton'\n        src={settingsGear}\n        onClick={props.onSettingsClick}\n        alt=''\n      ></img>\n    </div>\n  )\n}\n\nexport default SearchBar\n","import React, { useRef, useEffect } from 'react'\nimport './Roulette.css'\nimport { Howl } from 'howler'\n\ntype RouletteAlbumProps = {\n  position: number\n  src: string\n  shot: boolean\n  load: boolean\n  loading: boolean\n}\n\nconst useLoadSound = (play: boolean) => {\n  const loadSound = useRef<Howl>(\n    new Howl({\n      src: '/audio/load.mp3'\n    })\n  )\n\n  useEffect(() => {\n    if (play) loadSound.current.play()\n  }, [play])\n}\n\nconst useShootSound = (play: boolean, position: number) => {\n  const shotSound = useRef<Howl>(\n    new Howl({\n      src: position === 5 ? '/audio/shot.mp3' : '/audio/blank.mp3'\n    })\n  )\n\n  useEffect(() => {\n    if (play) shotSound.current.play()\n  }, [play])\n}\n\nconst RouletteAlbum: React.FC<RouletteAlbumProps> = props => {\n  useLoadSound(props.loading)\n  useShootSound(props.shot, props.position)\n\n  return (\n    <div\n      className='container'\n      style={{ transform: `rotate(${-60 * props.position}deg)` }}\n    >\n      <div className={`cover ${props.load && 'load'}`}>\n        <img className={props.shot ? 'shot' : ''} src={props.src} alt='' />\n      </div>\n    </div>\n  )\n}\n\nexport default RouletteAlbum\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport { Spotify } from '../../utils/Spoitfy'\nimport './App.css'\nimport SearchBar from '../searchBar/SearchBar'\nimport Roulette from '../roulette/Roulette'\nimport ActionButtons from '../actionButtons/ActionButtons'\nimport { TrackController, SearchResult, SpotifyItem, AlbumController, ArtistController } from '../../utils/ContextController'\nimport WarningDialog from '../warningDialog/WarningDialog'\nimport Settings from '../settings/Settings'\nimport Results from '../searchResults/Results';\nimport Title from '../title/Title';\n\nexport enum BulletType {\n  Songs, Albums, Artists\n}\n\nexport enum RouletteState {\n  RESET = 'reset',\n  IDLE = 'idle',\n  LOAD = 'load',\n  LOADING = 'loading',\n  READY = 'ready',\n  SPIN = 'spin',\n  SPINING = 'spining',\n  SHOOTING = 'shooting',\n  SHOT = 'shot'\n}\n\nconst useSettingsOpen = (): [boolean, () => void] => {\n  const [settingsOpen, setSettingsOpen] = useState(false)\n\n  const toggleSettings = () => {\n    setSettingsOpen(!settingsOpen)\n  }\n\n  return [settingsOpen, toggleSettings]\n}\n\nconst usePlayerOpen = (spotify: Spotify, state: RouletteState, setState: React.Dispatch<React.SetStateAction<RouletteState>>): [boolean, () => void, React.Dispatch<any>] => {\n  const [playerOpen, setPlayerOpen] = useState()\n\n  const checkPlayerOpen = useCallback(() => spotify.hasPlayerOpen().then(isOpen => {setPlayerOpen(isOpen)}),[spotify])\n\n  useEffect(() => {\n    if (state === RouletteState.READY) {\n      if(!playerOpen)\n        checkPlayerOpen()\n      else\n        setState(RouletteState.SPIN)\n    }\n  }, [playerOpen, checkPlayerOpen, state, setState])\n\n\n  return [playerOpen, checkPlayerOpen, setPlayerOpen]\n}\n\nconst App: React.FC = () => {\n  const spotify = useRef(new Spotify(new TrackController()))\n  const [state, setState] = useState(RouletteState.IDLE)\n  const [bullet, setBullet] = useState<SpotifyItem>()\n  const [blank, setBlank] = useState<SpotifyItem>()\n  const [bulletType, setBulletType] = useState(BulletType.Songs)\n  const [searchResult, setSearchResult] = useState<SearchResult>(new SearchResult(false, []))\n  const [playerOpen, checkPlayerOpen, setPlayerOpen] = usePlayerOpen(spotify.current, state, setState)\n  const [settingsOpen, toggleSettingsOpen] = useSettingsOpen()\n\n  useEffect(() => {\n    switch (bulletType) {\n      case BulletType.Songs:\n        spotify.current.setController(new TrackController())\n        break;\n      case BulletType.Albums:\n        spotify.current.setController(new AlbumController())\n        break;\n      case BulletType.Artists:\n        spotify.current.setController(new ArtistController())\n        break;\n    }\n  }, [bulletType])\n\n  useEffect(() => {\n    if (!spotify.current.isAuthenticated()) spotify.current.authenticateUser()\n  }, [])\n\n  const onResultClick = (position: number): void => {\n    if (blank === undefined) {\n      setBlank(searchResult.results[position])\n    } else {\n      setBullet(searchResult.results[position])\n    }\n\n    setSearchResult(new SearchResult(false, []))\n    setState(RouletteState.LOAD)\n  }\n\n  const onSearch = (query: string): void => {\n    spotify.current.search(query).then(\n      result => setSearchResult(result)\n    )\n  }\n\n  const onShoot = (isBullet: boolean): void => {\n    spotify.current.play(isBullet ? bullet : blank)\n  }\n\n  const onContinueClick = () => {\n    setState(RouletteState.SPIN)\n    setPlayerOpen(true)\n  }\n\n  const resetRoulette = () => {\n    setBullet(undefined)\n    setBlank(undefined)\n    setState(RouletteState.RESET)\n  }\n\n  const resolveTooltip = () : string => {\n    if (state ===  RouletteState.IDLE) {\n      if(blank === undefined) {\n        switch (bulletType) {\n          case BulletType.Songs:\n            return 'Search for a song to get started'\n          case BulletType.Albums:\n            return 'Search for an album to get started'\n          case BulletType.Artists:\n            return 'Search for an artist to get started'\n        }\n      }\n      else return 'Search for the bullet!'\n    }\n    else if(state === RouletteState.LOADING)\n      return 'Loading weapon...'\n    else if(state === RouletteState.SHOT)\n      return 'Choose an option'\n    \n    return ''\n  }\n\n  return (\n    <div className='app'>\n      <Title />\n      <div className='searchContainer'>\n        <SearchBar\n          onSearch={onSearch}\n          onQueryChange={() => setSearchResult(new SearchResult(false, []))}\n          onSettingsClick={toggleSettingsOpen}\n          locked={state !== RouletteState.IDLE}\n          tooltip={resolveTooltip()}\n        />\n        <Results searchResult={searchResult} onResultClick={onResultClick}/>\n        <ActionButtons visible={state === RouletteState.SHOT} onRerollClick={() => setState(RouletteState.SPIN)} onResetClick={resetRoulette}/>\n      </div>\n      <Roulette\n        blank={blank}\n        bullet={bullet}\n        state={state}\n        setState={setState}\n        chooseBullet={true}\n        onShoot={onShoot}\n      />\n      <WarningDialog visible={!playerOpen && playerOpen !== undefined } onRetryClick={checkPlayerOpen} onContinueClick={onContinueClick} />\n      <Settings visible={settingsOpen} toggleVisibility={toggleSettingsOpen} bulletType={bulletType} setBulletType={setBulletType}/>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport './ActionButtons.css'\nimport reload from '../../images/reload.svg'\nimport reshoot from '../../images/reshoot.svg'\n\ntype ActionButtonProps = {\n  visible: boolean\n  onRerollClick: () => void\n  onResetClick: () => void\n}\n\nconst ActionButtons: React.FC<ActionButtonProps> = props => {\n  return (\n    <div className={`actionButtonContainer ${props.visible ? 'visible' : ''}`}>\n      <button className='actionButton' onClick={props.onResetClick} >\n        <img src={reload} alt=''></img>\n        Reset Gun.\n      </button>\n      <button className='actionButton' onClick={props.onRerollClick} >\n        <img src={reshoot} alt=''></img>\n        Shoot again!\n      </button>\n    </div>\n  )\n}\n\nexport default ActionButtons\n","import { SpotifyClient } from './Spoitfy'\n\nexport interface ContextController {\n  search(query: string, client: SpotifyClient): Promise<SearchResult>\n}\n\nexport type SpotifyItem = {\n  title: string\n  author: string\n  image: string\n  playParameters: {}\n  shuffle: boolean\n}\n\nexport class SearchResult {\n  constructor(public display: boolean, public results: SpotifyItem[]) {}\n}\n\nexport class TrackController implements ContextController {\n  async search(query: string, client: SpotifyClient): Promise<SearchResult> {\n    const tracks = await client.searchTracks(query)\n    return new SearchResult(true, tracks.tracks.items.slice(0, 3).map(this.formatResult))\n  }\n\n  formatResult(track: SpotifyApi.TrackObjectFull): SpotifyItem {\n    return {\n        title: track.name,\n        author: track.artists[0].name,\n        image: track.album.images[0].url,\n        playParameters: {uris: [track.uri]},\n        shuffle: false\n      }\n  }\n}\n\nexport class AlbumController implements ContextController {\n  async search(query: string, client: SpotifyClient): Promise<SearchResult> {\n    const albums = await client.searchAlbums(query)\n    return new SearchResult(true, albums.albums.items.slice(0,3).map(this.formatResult))\n  }\n\n  formatResult(album: any): SpotifyItem {\n    return {\n        title: album.name,\n        author: album.artists[0].name,\n        image: album.images.length > 0 ? album.images[0].url : '',\n        playParameters: { context_uri: album.uri },\n        shuffle: false\n      }\n  }\n}\n\nexport class ArtistController implements ContextController {\n  async search(query: string, client: SpotifyClient): Promise<SearchResult> {\n    const artists = await client.searchArtists(query)\n    return new SearchResult(true, artists.artists.items.slice(0,3).map(this.formatResult))\n  }\n\n  formatResult(artist: SpotifyApi.ArtistObjectFull): SpotifyItem {\n    return {\n        title: artist.name,\n        author: 'Artist',\n        image: artist.images.length > 0 ? artist.images[0].url : '',\n        playParameters: { context_uri: artist.uri },\n        shuffle: true\n      }\n  }\n}\n","import React from 'react'\nimport './WarningDialog.css'\nimport warning from '../../images/warning.svg'\n\ntype WarningDialogProps = {\n  visible: boolean\n  onRetryClick: () => void\n  onContinueClick: () => void\n}\n\nconst WarningDialog: React.FC<WarningDialogProps> = props => {\n  return (\n    <div className={`warningDialog ${props.visible ? 'visible' : 'hidden'}`}>\n      <img src={warning} alt={'Warning'}></img>\n      <h2>Spotify not found</h2>\n      <p>\n        Make sure you have spotify open and press retry. If you\n        continue no song will play.\n      </p>\n      <button className='retry' onClick={props.onRetryClick}>\n        Retry\n      </button>\n      <button className='continue' onClick={props.onContinueClick}>continue</button>\n    </div>\n  )\n}\n\nexport default WarningDialog\n","import React from 'react'\nimport './SettingChips.css'\n\ntype SettingChipsProps = {\n  chips: string[]\n  selected: number\n  onSelect: (bullet: number) => void\n}\n\nconst SettingChips: React.FC<SettingChipsProps> = props => {\n  const chips = props.chips.map((chip, i) => (\n    <div\n      key={i}\n      className={`chip ${i === props.selected ? 'selected' : ''}`}\n      onClick={() => props.onSelect(i)}\n    >\n      {chip}\n    </div>\n  ))\n\n  return <div className='chipContainer'>{chips}</div>\n}\n\nexport default SettingChips\n","import React from 'react'\nimport './Settings.css'\nimport close from '../../images/close.svg'\nimport SettingChips from '../settingChips/SettingChips';\n\ntype SettingsProps = {\n  visible: boolean\n  bulletType: number\n  setBulletType: (bullet: number) => void\n  toggleVisibility: () => void\n}\n\nconst WarningDialog: React.FC<SettingsProps> = props => {\n  return (\n    <div className={`settingsContainer ${props.visible ? 'visible' : 'hidden'}`} onClick={props.toggleVisibility}>\n      <div className='settingsDialog' onClick={e => e.stopPropagation()}>\n        <h2>Settings</h2>\n        <h3>Bullet Type</h3>\n        <SettingChips selected={props.bulletType} chips={['Songs', 'Albuns', 'Artists']} onSelect={props.setBulletType}/>\n        <img className='close' src={close} onClick={props.toggleVisibility} alt=''></img>\n      </div>\n    </div>\n  )\n}\n\nexport default WarningDialog\n","import React from 'react'\nimport './Results.css'\n\ntype ResultProps = {\n  title: string\n  author: string\n  image: string\n  onClick: () => void\n}\n\nconst Result: React.FC<ResultProps> = props => {\n  return (\n    <div className='result' onClick={props.onClick}>\n      <img className='cover' src={props.image} alt={`${props.title} Album Cover`}></img>\n      <div className='info'>\n        <h2 className='title'>{props.title}</h2>\n        <p className='artist'>{props.author}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Result\n","import React from 'react'\nimport './Results.css'\nimport Result from '../searchResults/Result'\nimport { SearchResult } from '../../utils/ContextController'\n\ntype ResultsProps = {\n  searchResult: SearchResult\n  onResultClick: (position: number) => void\n}\n\nconst Results: React.FC<ResultsProps> = props => {\n  const onResultClick = (position: number) => {\n    props.onResultClick(position)\n  }\n\n  const resultElements = props.searchResult.results.map((result, i) => (\n    <Result key={Math.floor(Math.random() * 10000)} {...result} onClick={() => onResultClick(i)} />\n  ))\n\n  if (props.searchResult.display) {\n    if (props.searchResult.results.length > 0)\n      return <div className='results'>{resultElements}</div>\n    else\n      return (\n        <div className='results'>\n          <div className='noResult'>\n            <h2 className='title'>No results found.</h2>\n          </div>\n        </div>\n      )\n  }\n  return null\n}\n\nexport default Results\n","import React from 'react'\nimport './Title.css'\nimport logo from '../../images/logo.png'\n\nconst Title: React.FC = () => {\n  return (\n    <div className='siteTitle'>\n      <img src={logo} alt=''/>\n      <div>\n        <h1>Spotify</h1>\n        <h1>Roulette</h1>\n      </div>\n    </div>\n  )\n}\n\nexport default Title\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}