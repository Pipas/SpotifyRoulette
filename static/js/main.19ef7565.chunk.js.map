{"version":3,"sources":["images/search.svg","images/roulette.svg","components/roulette/Roulette.tsx","utils/spoitfy.ts","components/songInput/searchResult/Result.tsx","components/songInput/songInput.tsx","components/roulette/RouletteAlbum.tsx","components/app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","LoadState","Spotify","Object","classCallCheck","this","client","auth","SpotifyWebApi","createClass","key","value","access_token","window","location","hash","substring","split","setAccessToken","href","concat","join","query","searchTracks","Result","props","react_default","a","createElement","className","src","cover","alt","title","artist","SongInput","searchInput","useRef","_useState","useState","_useState2","slicedToArray","state","setState","_useState3","_useState4","setQuery","_useState5","_useState6","results","setResults","useEffect","current","addEventListener","updateSize","focused","length","resultElements","map","result","i","songInput_searchResult_Result","assign","style","height","type","ref","onChange","e","target","placeholder","onClick","spotify","searchTrack","then","data","tracks","items","slice","item","name","artists","album","images","url","SearchLogo","RouletteAlbum","play","loadSound","Howl","useLoadSound","loading","position","shotSound","useShootSound","shot","transform","load","RouletteState","Roulette","chosenShot","setChosenShot","angle","setAngle","_useState7","EMPTY","_useState8","loadState","setLoadState","_useLoadShots","chooseBullet","loadedShots","setLoadedShots","setTimeout","incrementShot","useLoadShots","_useLoadShots2","loadShots","resetLoadShots","useSpinSound","SPINING","albums","blank","bullet","roulette_RouletteAlbum","SHOT","LOADING","loadRoulette","callback","waitTime","resetRoulette","setCSSPreviousAngle","n","document","documentElement","setProperty","LOAD","HALF","IDLE","SPIN","FULL","randomShot","randomChosenShot","Math","floor","random","roulette","App","rouletteState","setRouletteState","songInput","components_roulette_Roulette","Boolean","hostname","match","ReactDOM","render","components_app_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.19ef7565.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.97161617.svg\";","module.exports = __webpack_public_path__ + \"static/media/roulette.dc8d006c.svg\";","import React, { useState, useEffect, useRef } from 'react'\nimport { Howl } from 'howler'\nimport './Roulette.css'\nimport roulette from '../../images/roulette.svg'\nimport RouletteAlbum from './RouletteAlbum'\nimport { RouletteState } from '../app/App'\n\nenum LoadState {\n  EMPTY = 'empty',\n  HALF = 'half',\n  FULL = 'full'\n}\n\ntype RouletteProps = {\n  blank: string\n  bullet: string\n  state: RouletteState\n  setState: React.Dispatch<React.SetStateAction<RouletteState>>\n  chooseBullet: boolean\n}\n\nconst useSpinSound = (play: boolean) => {\n  const loadSound = useRef<Howl>(\n    new Howl({\n      src: '/audio/spin.mp3'\n    })\n  )\n\n  useEffect(() => {\n    if (play) loadSound.current.play()\n  }, [play])\n}\n\nconst useLoadShots = (chooseBullet: boolean): [number, () => void, () => void] => {\n  const [loadedShots, setLoadedShots] = useState(-1)\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (chooseBullet) {\n        if (loadedShots >= 0 && loadedShots < 4) incrementShot()\n        if (loadedShots === 5) incrementShot()\n      } else {\n        if (loadedShots >= 0 && loadedShots < 6) incrementShot()\n      }\n    }, 1500)\n  }, [loadedShots, chooseBullet])\n\n  const incrementShot = (): void =>\n    setLoadedShots(loadedShots => loadedShots + 1)\n\n  const resetLoadShots = () => setLoadedShots(-1)\n\n  return [loadedShots, incrementShot, resetLoadShots]\n}\n\nconst Roulette: React.FC<RouletteProps> = props => {\n  const [chosenShot, setChosenShot] = useState(-1)\n  const [angle, setAngle] = useState(0)\n  const [loadState, setLoadState] = useState(LoadState.EMPTY)\n  const [loadedShots, loadShots, resetLoadShots] = useLoadShots(props.chooseBullet)\n\n  useSpinSound(props.state === RouletteState.SPINING)\n\n  const albums = [\n    props.blank,\n    props.blank,\n    props.blank,\n    props.blank,\n    props.blank,\n    props.bullet\n  ].map((src, i) => (\n    <RouletteAlbum\n      key={i}\n      src={src}\n      position={i}\n      shot={i === chosenShot && props.state === RouletteState.SHOT}\n      load={i <= loadedShots}\n      loading={i === loadedShots && props.state === RouletteState.LOADING}\n    />\n  ))\n\n  // Loads shots and calls callback after waitTime\n  const loadRoulette = (callback: () => void, waitTime: number): void => {\n    loadShots()\n\n    setTimeout(() => {\n      callback()\n    }, waitTime)\n\n    props.setState(RouletteState.LOADING)\n  }\n\n  const resetRoulette = (): void => {\n    setChosenShot(-1)\n    setAngle(0)\n    resetLoadShots()\n    setLoadState(LoadState.EMPTY)\n  }\n\n  const setCSSPreviousAngle = (n: number) => {\n    document.documentElement.style.setProperty('--previous', `${n}`)\n  }\n\n  useEffect(() => {\n    if (props.state === RouletteState.LOAD) {\n      if (props.chooseBullet) {\n        if (loadState === LoadState.EMPTY) {\n          loadRoulette(() => {\n            setLoadState(LoadState.HALF)\n            setAngle(5)\n            props.setState(RouletteState.IDLE)\n          }, 7500)\n        } else if (loadState === LoadState.HALF) {\n          loadRoulette(() => {\n            props.setState(RouletteState.SPIN)\n            setLoadState(LoadState.FULL)\n            setCSSPreviousAngle(5)\n          }, 500)\n        } else {\n          resetRoulette()\n        }\n      } else {\n        resetRoulette()\n\n        loadRoulette(() => {\n          setAngle(5)\n          props.setState(RouletteState.SPIN)\n          setLoadState(LoadState.FULL)\n          setCSSPreviousAngle(5)\n        }, 8300)\n      }\n    } else if (props.state === RouletteState.SPIN && loadState === LoadState.FULL) {\n      const randomShot = randomChosenShot()\n\n      setTimeout(() => {\n        setAngle(randomShot)\n        setCSSPreviousAngle(randomShot)\n        props.setState(RouletteState.SHOT)\n      }, 1700)\n\n      props.setState(RouletteState.SPINING)\n    }\n  })\n\n  const randomChosenShot = (): number => {\n    const randomShot = Math.floor(Math.random() * 6)\n    document.documentElement.style.setProperty('--next', `${randomShot}`)\n    setChosenShot(randomShot)\n\n    return randomShot\n  }\n\n  return (\n    <div\n      className={`roulette ${props.state} ${loadState}`}\n      style={{ transform: `rotate(calc(60deg * ${angle}))` }}\n    >\n      {albums}\n      <img src={roulette} alt=''></img>\n    </div>\n  )\n}\n\nexport default Roulette\n","import SpotifyWebApi from 'spotify-web-api-js'\n\nexport class Spotify {\n  private client: SpotifyWebApi.SpotifyWebApiJs\n  private auth: boolean = false\n\n  constructor() {\n    this.client = new SpotifyWebApi()\n  }\n\n  authenticateUser() {\n    const access_token = window.location.hash\n      .substring(1)\n      .split('&')[0]\n      .split('=')[1]\n    window.location.hash = ''\n\n    const authEndpoint = 'https://accounts.spotify.com/authorize'\n    const clientId = '41e10dc3f3594667b190b3681fdee8ca'\n    const redirectUri = process.env.NODE_ENV === 'production' ? 'https://spotifyroulette.paulocorreia.me' : 'http://localhost:3000/'\n    const scopes = [\n      'user-top-read'\n    ];\n\n    // If there is no token, redirect to Spotify authorization\n    if (!access_token) {\n      window.location.href = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join('%20')}&response_type=token&show_dialog=true`\n    } else {\n      this.client.setAccessToken(access_token)\n      this.auth = true\n    }\n  }\n\n  searchTrack(query: string): Promise<SpotifyApi.TrackSearchResponse> {\n    return this.client.searchTracks(query)\n  }\n\n  isAuthenticated() {\n    return this.auth\n  }\n}\n","import React from 'react'\nimport './Result.css'\n\ntype ResultProps = {\n  title: string\n  artist: string\n  cover: string\n}\n\nconst Result: React.FC<ResultProps> = props => {\n  return (\n    <div className='result'>\n      <img className='cover' src={props.cover} alt={`${props.title} Album Cover`}></img>\n      <div className='info'>\n        <h2 className='title'>{props.title}</h2>\n        <p className='artist'>{props.artist}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Result\n","import React, { useState, useEffect, useRef } from 'react'\nimport './SongInput.css'\nimport SearchLogo from '../../images/search.svg'\nimport Result from './searchResult/Result'\nimport { Spotify } from '../../utils/spoitfy'\n\ntype onChange = (event: React.ChangeEvent<HTMLInputElement>) => void\n\ntype SongInputProps = {\n  spotify: Spotify\n}\n\nconst SongInput: React.FC<SongInputProps> = props => {\n  const searchInput = useRef<HTMLInputElement>(null)\n  const [state, setState] = useState('')\n  const [query, setQuery] = useState('')\n  const [results, setResults] = useState<\n    { title: string; artist: string; cover: string }[]\n  >([])\n\n  useEffect(() => {\n    if (searchInput.current) {\n      searchInput.current.addEventListener('focus', () => updateSize(true))\n      searchInput.current.addEventListener('focusout', () => updateSize(false))\n    }\n  })\n\n  const updateSize = (focused: boolean) => {\n    if (focused && query.length === 0) setState('focused')\n    else if (focused || query.length > 0) setState('focused')\n    else {\n      setResults([])\n      setState('')\n    }\n  }\n\n  const onSearchClick = () => {\n    if (query !== null && query !== '') {\n      props.spotify.searchTrack(query).then(data => {\n        if (data.tracks.items.length > 0) {\n          setResults(\n            data.tracks.items.slice(0, 3).map(item => ({\n              title: item.name,\n              artist: item.artists[0].name,\n              cover: item.album.images[0].url\n            }))\n          )\n        }\n      })\n    }\n  }\n\n  const onQueryChange: onChange = e => {\n    setQuery(e.target.value)\n  }\n\n  const resultElements = results.map((result, i) => (\n    <Result key={i} {...result} />\n  ))\n\n  return (\n    <div className={`input ${state}`} style={{height: `${88 + (64 * results.length) + (results.length ? 8 : 0)}px`}}>\n      <div className='searchBar'>\n        <input\n          type='text'\n          ref={searchInput}\n          value={query}\n          onChange={onQueryChange}\n          placeholder='Search'\n        ></input>\n        <button onClick={onSearchClick}>\n          <img src={SearchLogo} alt=''></img>\n        </button>\n      </div>\n      {!!results.length && <div className='results'>{resultElements}</div>}\n    </div>\n  )\n}\n\nexport default SongInput\n","import React, { useRef, useEffect } from 'react'\nimport './Roulette.css'\nimport { Howl } from 'howler'\n\ntype RouletteAlbumProps = {\n  position: number\n  src: string\n  shot: boolean\n  load: boolean\n  loading: boolean\n}\n\nconst useLoadSound = (play: boolean) => {\n  const loadSound = useRef<Howl>(\n    new Howl({\n      src: '/audio/load.mp3'\n    })\n  )\n\n  useEffect(() => {\n    if (play) loadSound.current.play()\n  }, [play])\n}\n\nconst useShootSound = (play: boolean, position: number) => {\n  const shotSound = useRef<Howl>(\n    new Howl({\n      src: position === 5 ? '/audio/shot.mp3' : '/audio/blank.mp3'\n    })\n  )\n\n  useEffect(() => {\n    if (play) shotSound.current.play()\n  }, [play])\n}\n\nconst RouletteAlbum: React.FC<RouletteAlbumProps> = props => {\n  useLoadSound(props.loading)\n  useShootSound(props.shot, props.position)\n\n  return (\n    <div\n      className='container'\n      style={{ transform: `rotate(${-60 * props.position}deg)` }}\n    >\n      <div className={`cover ${props.load && 'load'}`}>\n        <img className={props.shot ? 'shot' : ''} src={props.src} alt='' />\n      </div>\n    </div>\n  )\n}\n\nexport default RouletteAlbum\n","import React, { useState, useEffect, useRef } from 'react'\nimport { Spotify } from '../../utils/spoitfy'\nimport './App.css'\nimport SongInput from '../songInput/songInput'\nimport Roulette from '../roulette/Roulette'\n\nexport enum RouletteState {\n  IDLE = 'idle',\n  LOAD = 'load',\n  LOADING = 'loading',\n  SPIN = 'spin',\n  SPINING = 'spining',\n  SHOT = 'shot'\n}\n\nconst App: React.FC = () => {\n  const spotify = useRef(new Spotify())\n  const [rouletteState, setRouletteState] = useState(RouletteState.IDLE)\n\n  useEffect(() => {\n    //if (!spotify.current.isAuthenticated()) spotify.current.authenticateUser()\n  }, [])\n\n  return (\n    <div className='app'>\n      <SongInput spotify={spotify.current} />\n      <button onClick={() => setRouletteState(RouletteState.LOAD)}>Try me</button>\n      <button onClick={() => setRouletteState(RouletteState.SPIN)}>Spin</button>\n      <Roulette\n        blank='https://upload.wikimedia.org/wikipedia/en/4/42/Beatles_-_Abbey_Road.jpg'\n        bullet='https://upload.wikimedia.org/wikipedia/en/9/9e/No_Love_Deep_Web_artwork.png'\n        state={rouletteState}\n        setState={setRouletteState}\n        chooseBullet={false}\n      />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}