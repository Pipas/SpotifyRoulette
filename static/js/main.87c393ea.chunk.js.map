{"version":3,"sources":["images/search.svg","images/roulette.svg","images/spin.svg","components/roulette/Roulette.tsx","utils/Spoitfy.ts","components/songInput/searchResult/Result.tsx","components/songInput/songInput.tsx","components/roulette/RouletteAlbum.tsx","components/app/App.tsx","components/actionButton/ActionButton.tsx","utils/ContextController.ts","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","LoadState","Spotify","Object","classCallCheck","this","client","auth","SpotifyWebApi","createClass","key","value","access_token","window","location","hash","substring","split","setAccessToken","href","concat","join","query","searchTracks","options","play","Result","props","react_default","a","createElement","className","onClick","src","alt","title","author","SongInput","searchInput","useRef","_useState","useState","_useState2","slicedToArray","state","setState","_useState3","_useState4","setQuery","updateSize","useCallback","focused","length","onSearchClick","onSearch","useEffect","input","current","focus","focusout","onKeypress","e","addEventListener","removeEventListener","locked","resultElements","results","map","result","i","songInput_searchResult_Result","assign","onResultClick","style","height","type","ref","onChange","target","placeholder","disabled","SearchLogo","RouletteAlbum","loadSound","Howl","useLoadSound","loading","position","shotSound","useShootSound","shot","transform","load","RouletteState","Roulette","chosenShot","setChosenShot","_useState5","_useState6","angle","setAngle","_useState7","EMPTY","_useState8","loadState","setLoadState","_useLoadShots","chooseBullet","loadedShots","setLoadedShots","setTimeout","incrementShot","useLoadShots","_useLoadShots2","loadShots","resetLoadShots","useSpinSound","SPINING","albums","blank","bullet","roulette_RouletteAlbum","SHOT","LOADING","loadRoulette","callback","waitTime","resetRoulette","setCSSPreviousAngle","n","document","documentElement","setProperty","LOAD","HALF","IDLE","SPIN","FULL","randomShot","randomChosenShot","onShoot","Math","floor","random","roulette","ActionButton","visible","TrackController","_ContextController","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","_this","spotify","searchTrack","then","data","setResults","tracks","items","slice","item","name","artists","album","images","url","undefined","track","uris","uri","ContextController","App","setBullet","setBlank","controller","isAuthenticated","authenticateUser","songInput","formatResults","search","components_actionButton_ActionButton","spin","components_roulette_Roulette","getItemSrc","isBullet","Boolean","hostname","match","ReactDOM","render","components_app_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.87c393ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.97161617.svg\";","module.exports = __webpack_public_path__ + \"static/media/roulette.dc8d006c.svg\";","module.exports = __webpack_public_path__ + \"static/media/spin.8f3bc11a.svg\";","import React, { useState, useEffect, useRef } from 'react'\nimport { Howl } from 'howler'\nimport './Roulette.css'\nimport roulette from '../../images/roulette.svg'\nimport RouletteAlbum from './RouletteAlbum'\nimport { RouletteState } from '../app/App'\n\nenum LoadState {\n  EMPTY = 'empty',\n  HALF = 'half',\n  FULL = 'full'\n}\n\ntype RouletteProps = {\n  blank: string\n  bullet: string\n  state: RouletteState\n  setState: React.Dispatch<React.SetStateAction<RouletteState>>\n  chooseBullet: boolean\n  onShoot: (isBullet: boolean) => void\n}\n\nconst useSpinSound = (play: boolean) => {\n  const loadSound = useRef<Howl>(\n    new Howl({\n      src: '/audio/spin.mp3'\n    })\n  )\n\n  useEffect(() => {\n    if (play) loadSound.current.play()\n  }, [play])\n}\n\nconst useLoadShots = (chooseBullet: boolean): [number, () => void, () => void] => {\n  const [loadedShots, setLoadedShots] = useState(-1)\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (chooseBullet) {\n        if (loadedShots >= 0 && loadedShots < 4) incrementShot()\n        if (loadedShots === 5) incrementShot()\n      } else {\n        if (loadedShots >= 0 && loadedShots < 6) incrementShot()\n      }\n    }, 1500)\n  }, [loadedShots, chooseBullet])\n\n  const incrementShot = (): void =>\n    setLoadedShots(loadedShots => loadedShots + 1)\n\n  const resetLoadShots = () => setLoadedShots(-1)\n\n  return [loadedShots, incrementShot, resetLoadShots]\n}\n\nconst Roulette: React.FC<RouletteProps> = props => {\n  const [chosenShot, setChosenShot] = useState(-1)\n  const [angle, setAngle] = useState(0)\n  const [loadState, setLoadState] = useState(LoadState.EMPTY)\n  const [loadedShots, loadShots, resetLoadShots] = useLoadShots(props.chooseBullet)\n\n  useSpinSound(props.state === RouletteState.SPINING)\n\n  const albums = [\n    props.blank,\n    props.blank,\n    props.blank,\n    props.blank,\n    props.blank,\n    props.bullet\n  ].map((src, i) => (\n    <RouletteAlbum\n      key={i}\n      src={src}\n      position={i}\n      shot={i === chosenShot && props.state === RouletteState.SHOT}\n      load={i <= loadedShots}\n      loading={i === loadedShots && props.state === RouletteState.LOADING}\n    />\n  ))\n\n  // Loads shots and calls callback after waitTime\n  const loadRoulette = (callback: () => void, waitTime: number): void => {\n    loadShots()\n\n    setTimeout(() => {\n      callback()\n    }, waitTime)\n\n    props.setState(RouletteState.LOADING)\n  }\n\n  const resetRoulette = (): void => {\n    setChosenShot(-1)\n    setAngle(0)\n    resetLoadShots()\n    setLoadState(LoadState.EMPTY)\n  }\n\n  const setCSSPreviousAngle = (n: number) => {\n    document.documentElement.style.setProperty('--previous', `${n}`)\n  }\n\n  useEffect(() => {\n    if (props.state === RouletteState.LOAD) {\n      if (props.chooseBullet) {\n        if (loadState === LoadState.EMPTY) {\n          loadRoulette(() => {\n            setLoadState(LoadState.HALF)\n            setAngle(5)\n            props.setState(RouletteState.IDLE)\n          }, 7500)\n        } else if (loadState === LoadState.HALF) {\n          loadRoulette(() => {\n            props.setState(RouletteState.SPIN)\n            setLoadState(LoadState.FULL)\n            setCSSPreviousAngle(5)\n          }, 500)\n        } else {\n          resetRoulette()\n        }\n      } else {\n        resetRoulette()\n\n        loadRoulette(() => {\n          setAngle(5)\n          props.setState(RouletteState.SPIN)\n          setLoadState(LoadState.FULL)\n          setCSSPreviousAngle(5)\n        }, 8300)\n      }\n    } else if (props.state === RouletteState.SPIN && loadState === LoadState.FULL) {\n      const randomShot = randomChosenShot()\n\n      setTimeout(() => {\n        setAngle(randomShot)\n        props.setState(RouletteState.SHOT)\n      }, 1700)\n\n      props.setState(RouletteState.SPINING)\n    } else if (props.state === RouletteState.SHOT) {\n      setCSSPreviousAngle(chosenShot)\n      props.onShoot(chosenShot === 5)\n      props.setState(RouletteState.IDLE)\n    }\n  })\n\n  const randomChosenShot = (): number => {\n    const randomShot = Math.floor(Math.random() * 6)\n    document.documentElement.style.setProperty('--next', `${randomShot}`)\n    setChosenShot(randomShot)\n\n    return randomShot\n  }\n\n  return (\n    <div\n      className={`roulette ${props.state} ${loadState}`}\n      style={{ transform: `rotate(calc(60deg * ${angle}))` }}\n    >\n      {albums}\n      <img src={roulette} alt=''></img>\n    </div>\n  )\n}\n\nexport default Roulette\n","import SpotifyWebApi from 'spotify-web-api-js'\n\nexport class Spotify {\n  private client: SpotifyWebApi.SpotifyWebApiJs\n  private auth: boolean = false\n\n  constructor() {\n    this.client = new SpotifyWebApi()\n  }\n\n  authenticateUser() {\n    const access_token = window.location.hash\n      .substring(1)\n      .split('&')[0]\n      .split('=')[1]\n    window.location.hash = ''\n\n    const authEndpoint = 'https://accounts.spotify.com/authorize'\n    const clientId = '41e10dc3f3594667b190b3681fdee8ca'\n    const redirectUri = process.env.NODE_ENV === 'production' ? 'https://spotifyroulette.paulocorreia.me' : 'http://localhost:3000/'\n    const scopes = [\n      'user-top-read',\n      'user-modify-playback-state'\n    ];\n\n    // If there is no token, redirect to Spotify authorization\n    if (!access_token) {\n      window.location.href = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join('%20')}&response_type=token&show_dialog=true`\n    } else {\n      this.client.setAccessToken(access_token)\n      this.auth = true\n    }\n  }\n\n  searchTrack(query: string): Promise<SpotifyApi.TrackSearchResponse> {\n    return this.client.searchTracks(query)\n  }\n\n  play(options: SpotifyApi.PlayParameterObject) {\n    return this.client.play(options)\n  }\n\n  isAuthenticated() {\n    return this.auth\n  }\n}\n","import React from 'react'\nimport './Result.css'\n\ntype ResultProps = {\n  title: string\n  author: string\n  src: string\n  onClick: () => void\n}\n\nconst Result: React.FC<ResultProps> = props => {\n  return (\n    <div className='result' onClick={props.onClick}>\n      <img className='cover' src={props.src} alt={`${props.title} Album Cover`}></img>\n      <div className='info'>\n        <h2 className='title'>{props.title}</h2>\n        <p className='artist'>{props.author}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Result\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport './SongInput.css'\nimport SearchLogo from '../../images/search.svg'\nimport Result from './searchResult/Result'\nimport { SearchResult } from '../../utils/ContextController'\n\ntype onChange = (event: React.ChangeEvent<HTMLInputElement>) => void\n\ntype SongInputProps = {\n  results: SearchResult\n  onSearch: (query: string) => void\n  onResultClick: (position: number) => void\n  locked: boolean\n}\n\nconst SongInput: React.FC<SongInputProps> = props => {\n  const searchInput = useRef<HTMLInputElement>(null)\n  const [state, setState] = useState('')\n  const [query, setQuery] = useState('')\n\n  const updateSize = useCallback((focused: boolean) => {\n    if (focused && query.length === 0) setState('focused')\n    else if (focused || query.length > 0) setState('focused')\n    else {\n      setState('')\n    }\n  }, [query.length])\n\n  const onSearchClick = useCallback(() => {\n    if (query !== null && query !== '') {\n      props.onSearch(query)\n    }\n  }, [query, props])\n\n  useEffect(() => {\n    const input = searchInput.current;\n    const focus = () => updateSize(true)\n    const focusout = () => updateSize(false)\n    const onKeypress = (e: KeyboardEvent) => {\n      if (e.key === 'Enter') onSearchClick()\n    }\n\n    if (input !== null) {\n      input.addEventListener('focus', focus)\n      input.addEventListener('focusout', focusout)\n      input.addEventListener('keypress', onKeypress)\n    }\n\n    return () => {\n      if(input !== null) {\n        input.removeEventListener('focus', focus)\n        input.removeEventListener('focusout', focusout)\n        input.removeEventListener('keypress', onKeypress)\n      }\n    }\n  }, [onSearchClick, updateSize])\n\n  useEffect(() => {\n    if (props.locked) setState('')\n  }, [props.locked])\n\n  const onQueryChange: onChange = e => {\n    setQuery(e.target.value)\n  }\n\n  const resultElements = props.results.map((result, i) => (\n    <Result key={i} {...result} onClick={() => props.onResultClick(i)} />\n  ))\n\n  return (\n    <div\n      className={`input ${state}`}\n      style={{\n        height: `${88 +\n          64 * props.results.length +\n          (props.results.length ? 8 : 0)}px`\n      }}\n    >\n      <div className='searchBar'>\n        <input\n          type='text'\n          ref={searchInput}\n          value={query}\n          onChange={onQueryChange}\n          placeholder='Search'\n          disabled={props.locked}\n        ></input>\n        <button onClick={onSearchClick}>\n          <img src={SearchLogo} alt=''></img>\n        </button>\n      </div>\n      {!!props.results.length && (\n        <div className='results'>{resultElements}</div>\n      )}\n    </div>\n  )\n}\n\nexport default SongInput\n","import React, { useRef, useEffect } from 'react'\nimport './Roulette.css'\nimport { Howl } from 'howler'\n\ntype RouletteAlbumProps = {\n  position: number\n  src: string\n  shot: boolean\n  load: boolean\n  loading: boolean\n}\n\nconst useLoadSound = (play: boolean) => {\n  const loadSound = useRef<Howl>(\n    new Howl({\n      src: '/audio/load.mp3'\n    })\n  )\n\n  useEffect(() => {\n    if (play) loadSound.current.play()\n  }, [play])\n}\n\nconst useShootSound = (play: boolean, position: number) => {\n  const shotSound = useRef<Howl>(\n    new Howl({\n      src: position === 5 ? '/audio/shot.mp3' : '/audio/blank.mp3'\n    })\n  )\n\n  useEffect(() => {\n    if (play) shotSound.current.play()\n  }, [play])\n}\n\nconst RouletteAlbum: React.FC<RouletteAlbumProps> = props => {\n  useLoadSound(props.loading)\n  useShootSound(props.shot, props.position)\n\n  return (\n    <div\n      className='container'\n      style={{ transform: `rotate(${-60 * props.position}deg)` }}\n    >\n      <div className={`cover ${props.load && 'load'}`}>\n        <img className={props.shot ? 'shot' : ''} src={props.src} alt='' />\n      </div>\n    </div>\n  )\n}\n\nexport default RouletteAlbum\n","import React, { useState, useEffect, useRef } from 'react'\nimport { Spotify } from '../../utils/Spoitfy'\nimport './App.css'\nimport SongInput from '../songInput/songInput'\nimport Roulette from '../roulette/Roulette'\nimport ActionButton from '../actionButton/ActionButton'\nimport spin from '../../images/spin.svg'\nimport { TrackController } from '../../utils/ContextController'\n\nexport enum RouletteState {\n  IDLE = 'idle',\n  LOAD = 'load',\n  LOADING = 'loading',\n  SPIN = 'spin',\n  SPINING = 'spining',\n  SHOT = 'shot'\n}\n\nconst App: React.FC = () => {\n  const spotify = useRef(new Spotify())\n  const [state, setState] = useState(RouletteState.IDLE)\n  const [results, setResults] = useState<any>([])\n  const [bullet, setBullet] = useState<any>()\n  const [blank, setBlank] = useState<any>()\n  const controller = useRef(new TrackController(spotify.current, setResults))\n\n  useEffect(() => {\n    if (!spotify.current.isAuthenticated()) spotify.current.authenticateUser()\n  }, [])\n\n  const onResultClick = (position: number): void => {\n    if (blank === undefined) {\n      setBlank(results[position])\n    } else {\n      setBullet(results[position])\n    }\n\n    setResults([])\n    setState(RouletteState.LOAD)\n  }\n\n  const onShoot = (isBullet: boolean) : void => {\n    controller.current.play(isBullet ? bullet : blank)\n  }\n\n  return (\n    <div className='app'>\n      <div className='controls'>\n        <SongInput\n          results={controller.current.formatResults(results)}\n          onSearch={(query: string) => controller.current.search(query)}\n          onResultClick={onResultClick}\n          locked={state !== RouletteState.IDLE}\n        />\n        <ActionButton src={spin} visible={state === RouletteState.SHOT} />\n      </div>\n      <Roulette\n        blank={controller.current.getItemSrc(blank)}\n        bullet={controller.current.getItemSrc(bullet)}\n        state={state}\n        setState={setState}\n        chooseBullet={true}\n        onShoot={onShoot}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport './ActionButton.css'\n\ntype ActionButtonProps = {\n  src: string\n  visible: boolean\n}\n\nconst ActionButton: React.FC<ActionButtonProps> = props => {\n  return (\n    <button className={`actionButton ${props.visible ? 'visible' : ''}`}>\n      <img src={props.src} alt=''></img>\n    </button>\n  )\n}\n\nexport default ActionButton\n","import { Spotify } from './Spoitfy'\n\nexport type SearchResult = { title: string; author: string; src: string }[]\n\nexport interface IContextController {\n  search(query: string): void\n}\n\nexport class ContextController<T> {\n  constructor(\n    protected spotify: Spotify,\n    protected setResults: React.Dispatch<React.SetStateAction<T[]>>\n  ) {}\n}\n\nexport class TrackController extends ContextController<SpotifyApi.TrackObjectFull> {\n  search(query: string): void {\n    this.spotify.searchTrack(query).then(data => {\n      this.setResults(data.tracks.items.slice(0, 3))\n    })\n  }\n\n  formatResults(results: SpotifyApi.TrackObjectFull[]): SearchResult {\n    return results.map(item => ({\n      title: item.name,\n      author: item.artists[0].name,\n      src: item.album.images[0].url\n    }))\n  }\n\n  getItemSrc(item: SpotifyApi.TrackObjectFull): string {\n    return item === undefined ? '' : item.album.images[0].url\n  }\n\n  play(track: SpotifyApi.TrackObjectFull): void {\n    this.spotify.play({uris: [track.uri]})\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}