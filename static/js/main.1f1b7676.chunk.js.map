{"version":3,"sources":["images/search.svg","images/settings.svg","images/roulette.svg","images/reload.svg","images/reshoot.svg","images/warning.svg","images/close.svg","images/logo.png","components/roulette/Roulette.tsx","utils/Spoitfy.ts","components/searchBar/SearchBar.tsx","components/roulette/RouletteAlbum.tsx","components/app/App.tsx","components/actionButtons/ActionButtons.tsx","utils/ContextController.ts","components/warningDialog/WarningDialog.tsx","components/settingChips/SettingChips.tsx","components/settings/Settings.tsx","components/searchResults/Result.tsx","components/searchResults/Results.tsx","components/title/Title.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","LoadState","Spotify","controller","Object","classCallCheck","this","client","auth","deviceId","SpotifyWebApi","createClass","key","value","access_token","window","location","hash","substring","split","history","pushState","document","title","pathname","search","setAccessToken","href","concat","join","_search","asyncToGenerator","regenerator_default","a","mark","_callee","query","wrap","_context","prev","next","abrupt","sent","stop","_x","apply","arguments","item","undefined","setShuffle","shuffle","play","objectSpread","device_id","playParameters","catch","_hasPlayerOpen","_callee2","devices","_context2","getMyDevices","length","id","SearchBar","props","searchInput","useRef","_useState","useState","_useState2","slicedToArray","setQuery","onSearchClick","useCallback","onSearch","useEffect","input","current","onKeypress","e","addEventListener","removeEventListener","locked","react_default","createElement","className","onClick","src","SearchLogo","alt","type","ref","onChange","target","onQueryChange","placeholder","tooltip","disabled","settingsGear","onSettingsClick","RouletteAlbum","loadSound","Howl","useLoadSound","loading","position","shotSound","useShootSound","shot","style","transform","load","BulletType","RouletteState","Roulette","_useState3","_useState4","chosenShot","setChosenShot","_useState5","_useState6","angle","setAngle","_useState7","EMPTY","_useState8","loadState","setLoadState","_useLoadShots","chooseBullet","loadedShots","setLoadedShots","setTimeout","incrementShot","useLoadShots","_useLoadShots2","loadShots","resetLoadShots","useSpinSound","state","SPINING","albums","blank","bullet","map","i","roulette_RouletteAlbum","image","SHOOTING","LOADING","loadRoulette","callback","waitTime","setState","resetRoulette","setCSSPreviousAngle","n","documentElement","setProperty","LOAD","HALF","IDLE","READY","FULL","SPIN","randomShot","randomChosenShot","onShoot","SHOT","RESET","Math","floor","random","roulette","ActionButtons","visible","onResetClick","reload","onRerollClick","reshoot","SearchResult","display","results","TrackController","tracks","searchTracks","items","slice","formatResult","_x2","track","name","author","artists","album","images","url","uris","uri","AlbumController","_search2","searchAlbums","_x3","_x4","context_uri","ArtistController","_search3","_callee3","_context3","searchArtists","_x5","_x6","artist","WarningDialog","warning","onRetryClick","onContinueClick","SettingChips","chips","chip","selected","onSelect","toggleVisibility","stopPropagation","components_settingChips_SettingChips","bulletType","setBulletType","close","Result","Results","resultElements","searchResult","result","searchResults_Result","assign","onResultClick","Title","logo","App","spotify","setBullet","_useState9","_useState10","setBlank","_useState11","Songs","_useState12","_useState13","_useState14","authenticated","setAuthenticated","_useState15","_useState16","setSearchResult","_usePlayerOpen","playerOpen","setPlayerOpen","checkPlayerOpen","hasPlayerOpen","then","isOpen","usePlayerOpen","_usePlayerOpen2","_useSettingsOpen","settingsOpen","setSettingsOpen","useSettingsOpen","_useSettingsOpen2","toggleSettingsOpen","setController","Albums","Artists","isAuthenticated","authenticateUser","components_title_Title","components_searchBar_SearchBar","resolveTooltip","components_searchResults_Results","components_actionButtons_ActionButtons","components_roulette_Roulette","isBullet","components_warningDialog_WarningDialog","settings_Settings","Boolean","hostname","match","ReactDOM","render","components_app_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1f1b7676.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.9df51d4e.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.85c5dd08.svg\";","module.exports = __webpack_public_path__ + \"static/media/roulette.dc8d006c.svg\";","module.exports = __webpack_public_path__ + \"static/media/reload.2991144a.svg\";","module.exports = __webpack_public_path__ + \"static/media/reshoot.99a86319.svg\";","module.exports = __webpack_public_path__ + \"static/media/warning.6b87cfa4.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.e85191c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.7fee23ab.png\";","import React, { useState, useEffect, useRef } from 'react'\nimport { Howl } from 'howler'\nimport './Roulette.css'\nimport roulette from '../../images/roulette.svg'\nimport RouletteAlbum from './RouletteAlbum'\nimport { RouletteState } from '../app/App'\nimport { SpotifyItem } from '../../utils/ContextController';\n\nenum LoadState {\n  EMPTY = 'empty',\n  HALF = 'half',\n  FULL = 'full'\n}\n\ntype RouletteProps = {\n  blank: SpotifyItem | undefined\n  bullet: SpotifyItem | undefined\n  state: RouletteState\n  setState: React.Dispatch<React.SetStateAction<RouletteState>>\n  chooseBullet: boolean\n  onShoot: (isBullet: boolean) => void\n}\n\nconst useSpinSound = (play: boolean) => {\n  const loadSound = useRef<Howl>(\n    new Howl({\n      src: '/audio/spin.mp3'\n    })\n  )\n\n  useEffect(() => {\n    if (play) loadSound.current.play()\n  }, [play])\n}\n\nconst useLoadShots = (chooseBullet: boolean): [number, () => void, () => void] => {\n  const [loadedShots, setLoadedShots] = useState(-1)\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (chooseBullet) {\n        if (loadedShots >= 0 && loadedShots < 4) incrementShot()\n        if (loadedShots === 5) incrementShot()\n      } else {\n        if (loadedShots >= 0 && loadedShots < 6) incrementShot()\n      }\n    }, 1500)\n  }, [loadedShots, chooseBullet])\n\n  const incrementShot = (): void =>\n    setLoadedShots(loadedShots => loadedShots + 1)\n\n  const resetLoadShots = () => setLoadedShots(-1)\n\n  return [loadedShots, incrementShot, resetLoadShots]\n}\n\nconst Roulette: React.FC<RouletteProps> = props => {\n  const [chosenShot, setChosenShot] = useState(-1)\n  const [angle, setAngle] = useState(0)\n  const [loadState, setLoadState] = useState(LoadState.EMPTY)\n  const [loadedShots, loadShots, resetLoadShots] = useLoadShots(props.chooseBullet)\n\n  useSpinSound(props.state === RouletteState.SPINING)\n\n  const albums = [\n    props.blank,\n    props.blank,\n    props.blank,\n    props.blank,\n    props.blank,\n    props.bullet\n  ].map((item, i) => (\n    <RouletteAlbum\n      key={i}\n      src={item !== undefined ? item.image : ''}\n      position={i}\n      shot={i === chosenShot && props.state === RouletteState.SHOOTING}\n      load={i <= loadedShots}\n      loading={i === loadedShots && props.state === RouletteState.LOADING}\n    />\n  ))\n\n  // Loads shots and calls callback after waitTime\n  const loadRoulette = (callback: () => void, waitTime: number): void => {\n    loadShots()\n\n    setTimeout(() => {\n      callback()\n    }, waitTime)\n\n    props.setState(RouletteState.LOADING)\n  }\n\n  const resetRoulette = (): void => {\n    setChosenShot(-1)\n    setAngle(0)\n    resetLoadShots()\n    setLoadState(LoadState.EMPTY)\n  }\n\n  const setCSSPreviousAngle = (n: number) => {\n    document.documentElement.style.setProperty('--previous', `${n}`)\n  }\n\n  useEffect(() => {\n    if (props.state === RouletteState.LOAD) {\n      if (props.chooseBullet) {\n        if (loadState === LoadState.EMPTY) {\n          loadRoulette(() => {\n            setLoadState(LoadState.HALF)\n            setAngle(5)\n            props.setState(RouletteState.IDLE)\n          }, 7500)\n        } else if (loadState === LoadState.HALF) {\n          loadRoulette(() => {\n            props.setState(RouletteState.READY)\n            setLoadState(LoadState.FULL)\n            setCSSPreviousAngle(5)\n          }, 500)\n        } else {\n          resetRoulette()\n        }\n      } else {\n        resetRoulette()\n\n        loadRoulette(() => {\n          setAngle(5)\n          props.setState(RouletteState.READY)\n          setLoadState(LoadState.FULL)\n          setCSSPreviousAngle(5)\n        }, 8300)\n      }\n    } else if (props.state === RouletteState.SPIN && loadState === LoadState.FULL) {\n      const randomShot = randomChosenShot()\n\n      setTimeout(() => {\n        setAngle(randomShot)\n        props.setState(RouletteState.SHOOTING)\n      }, 1700)\n\n      props.setState(RouletteState.SPINING)\n    } else if (props.state === RouletteState.SHOOTING) {\n      setCSSPreviousAngle(chosenShot)\n      props.onShoot(chosenShot === 5)\n      props.setState(RouletteState.SHOT)\n    } else if (props.state === RouletteState.RESET) {\n      resetRoulette()\n      props.setState(RouletteState.IDLE)\n    }\n  })\n\n  const randomChosenShot = (): number => {\n    const randomShot = Math.floor(Math.random() * 6)\n    document.documentElement.style.setProperty('--next', `${randomShot}`)\n    setChosenShot(randomShot)\n\n    return randomShot\n  }\n\n  return (\n    <div\n      className={`roulette ${props.state} ${loadState}`}\n      style={{ transform: `rotate(calc(60deg * ${angle}))` }}\n    >\n      {albums}\n      <img src={roulette} alt=''></img>\n    </div>\n  )\n}\n\nexport default Roulette\n","import SpotifyWebApi from 'spotify-web-api-js'\nimport {\n  ContextController,\n  SearchResult,\n  SpotifyItem\n} from './ContextController'\n\nexport type SpotifyClient = SpotifyWebApi.SpotifyWebApiJs\n\nexport class Spotify {\n  private client: SpotifyClient\n  private auth: boolean = false\n  private deviceId: string = ''\n  private controller: ContextController\n\n  constructor(controller: ContextController) {\n    this.client = new SpotifyWebApi()\n    this.controller = controller\n  }\n\n  setController(controller: ContextController) {\n    this.controller = controller\n  }\n\n  authenticateUser() {\n    const access_token = window.location.hash\n      .substring(1)\n      .split('&')[0]\n      .split('=')[1]\n    window.location.hash = ''\n    window.history.pushState(\"\", document.title, window.location.pathname + window.location.search);\n\n    const authEndpoint = 'https://accounts.spotify.com/authorize'\n    const clientId = '41e10dc3f3594667b190b3681fdee8ca'\n    const redirectUri =\n      process.env.NODE_ENV === 'production'\n        ? 'https://paulocorreia.me/spotifyroulette/'\n        : 'http://localhost:3000/'\n    const scopes = [\n      'user-top-read',\n      'user-modify-playback-state',\n      'user-read-playback-state'\n    ]\n\n    // If there is no token, redirect to Spotify authorization\n    if (!access_token) {\n      window.location.href = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n        '%20'\n      )}&response_type=token&show_dialog=true`\n    } else {\n      this.client.setAccessToken(access_token)\n      this.auth = true\n    }\n  }\n\n  async search(query: string): Promise<SearchResult> {\n    return await this.controller.search(query, this.client)\n  }\n\n  play(item: SpotifyItem | undefined) {\n    if (this.deviceId !== '' && item !== undefined) {\n      this.client.setShuffle(item.shuffle)\n      this.client.play({ device_id: this.deviceId, ...item.playParameters }).catch()\n    }\n  }\n\n  async hasPlayerOpen(): Promise<boolean> {\n    const devices = await this.client.getMyDevices()\n    if (devices.devices.length === 0) return false\n    else {\n      if (devices.devices[0].id !== null) {\n        this.deviceId = devices.devices[0].id\n        return true\n      } else return false\n    }\n  }\n\n  isAuthenticated() {\n    return this.auth\n  }\n}\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport './SearchBar.css'\nimport SearchLogo from '../../images/search.svg'\nimport settingsGear from '../../images/settings.svg'\n\ntype onChange = (event: React.ChangeEvent<HTMLInputElement>) => void\n\ntype SearchBarProps = {\n  onSearch: (query: string) => void\n  onQueryChange: () => void\n  onSettingsClick: () => void\n  locked: boolean\n  tooltip: string\n}\n\nconst SearchBar: React.FC<SearchBarProps> = props => {\n  const searchInput = useRef<HTMLInputElement>(null)\n  const [query, setQuery] = useState('')\n\n  const onSearchClick = useCallback(() => {\n    if (query !== null && query !== '') {\n      props.onSearch(query)\n    }\n  }, [query, props])\n\n  useEffect(() => {\n    const input = searchInput.current\n    const onKeypress = (e: KeyboardEvent) => {\n      if (e.key === 'Enter') onSearchClick()\n    }\n\n    if (input !== null) {\n      input.addEventListener('keypress', onKeypress)\n    }\n\n    return () => {\n      if (input !== null) {\n        input.removeEventListener('keypress', onKeypress)\n      }\n    }\n  }, [onSearchClick])\n\n  useEffect(() => {\n    if (props.locked) {\n      setQuery('')\n    }\n  }, [props.locked])\n\n  const onQueryChange: onChange = e => {\n    setQuery(e.target.value)\n    if (e.target.value === '') props.onQueryChange()\n  }\n\n  return (\n    <div className='buttonContainer'>\n      <div className='searchBar'>\n        <button onClick={onSearchClick}>\n          <img src={SearchLogo} alt=''></img>\n        </button>\n        <input\n          type='text'\n          ref={searchInput}\n          value={query}\n          onChange={onQueryChange}\n          placeholder={props.tooltip}\n          disabled={props.locked}\n        />\n      </div>\n      <img\n        className='settingsButton'\n        src={settingsGear}\n        onClick={props.onSettingsClick}\n        alt=''\n      ></img>\n    </div>\n  )\n}\n\nexport default SearchBar\n","import React, { useRef, useEffect } from 'react'\nimport './Roulette.css'\nimport { Howl } from 'howler'\n\ntype RouletteAlbumProps = {\n  position: number\n  src: string\n  shot: boolean\n  load: boolean\n  loading: boolean\n}\n\nconst useLoadSound = (play: boolean) => {\n  const loadSound = useRef<Howl>(\n    new Howl({\n      src: '/audio/load.mp3'\n    })\n  )\n\n  useEffect(() => {\n    if (play) loadSound.current.play()\n  }, [play])\n}\n\nconst useShootSound = (play: boolean, position: number) => {\n  const shotSound = useRef<Howl>(\n    new Howl({\n      src: position === 5 ? '/audio/shot.mp3' : '/audio/blank.mp3'\n    })\n  )\n\n  useEffect(() => {\n    if (play) shotSound.current.play()\n  }, [play])\n}\n\nconst RouletteAlbum: React.FC<RouletteAlbumProps> = props => {\n  useLoadSound(props.loading)\n  useShootSound(props.shot, props.position)\n\n  return (\n    <div\n      className='container'\n      style={{ transform: `rotate(${-60 * props.position}deg)` }}\n    >\n      <div className={`cover ${props.load && 'load'}`}>\n        <img className={props.shot ? 'shot' : ''} src={props.src} alt='' />\n      </div>\n    </div>\n  )\n}\n\nexport default RouletteAlbum\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport { Spotify } from '../../utils/Spoitfy'\nimport './App.css'\nimport SearchBar from '../searchBar/SearchBar'\nimport Roulette from '../roulette/Roulette'\nimport ActionButtons from '../actionButtons/ActionButtons'\nimport {\n  TrackController,\n  SearchResult,\n  SpotifyItem,\n  AlbumController,\n  ArtistController\n} from '../../utils/ContextController'\nimport WarningDialog from '../warningDialog/WarningDialog'\nimport Settings from '../settings/Settings'\nimport Results from '../searchResults/Results'\nimport Title from '../title/Title'\n\nexport enum BulletType {\n  Songs,\n  Albums,\n  Artists\n}\n\nexport enum RouletteState {\n  RESET = 'reset',\n  IDLE = 'idle',\n  LOAD = 'load',\n  LOADING = 'loading',\n  READY = 'ready',\n  SPIN = 'spin',\n  SPINING = 'spining',\n  SHOOTING = 'shooting',\n  SHOT = 'shot'\n}\n\nconst useSettingsOpen = (): [boolean, () => void] => {\n  const [settingsOpen, setSettingsOpen] = useState(false)\n\n  const toggleSettings = () => {\n    setSettingsOpen(!settingsOpen)\n  }\n\n  return [settingsOpen, toggleSettings]\n}\n\nconst usePlayerOpen = (\n  spotify: Spotify,\n  state: RouletteState,\n  setState: React.Dispatch<React.SetStateAction<RouletteState>>\n): [boolean, () => void, React.Dispatch<any>] => {\n  const [playerOpen, setPlayerOpen] = useState()\n\n  const checkPlayerOpen = useCallback(\n    () =>\n      spotify.hasPlayerOpen().then(isOpen => {\n        setPlayerOpen(isOpen)\n      }),\n    [spotify]\n  )\n\n  useEffect(() => {\n    if (state === RouletteState.READY) {\n      if (!playerOpen) checkPlayerOpen()\n      else setState(RouletteState.SPIN)\n    }\n  }, [playerOpen, checkPlayerOpen, state, setState])\n\n  return [playerOpen, checkPlayerOpen, setPlayerOpen]\n}\n\nconst App: React.FC = () => {\n  const spotify = useRef(new Spotify(new TrackController()))\n  const [state, setState] = useState(RouletteState.IDLE)\n  const [bullet, setBullet] = useState<SpotifyItem>()\n  const [blank, setBlank] = useState<SpotifyItem>()\n  const [bulletType, setBulletType] = useState(BulletType.Songs)\n  const [authenticated, setAuthenticated] = useState(false)\n  const [searchResult, setSearchResult] = useState<SearchResult>(\n    new SearchResult(false, [])\n  )\n  const [playerOpen, checkPlayerOpen, setPlayerOpen] = usePlayerOpen(\n    spotify.current,\n    state,\n    setState\n  )\n  const [settingsOpen, toggleSettingsOpen] = useSettingsOpen()\n\n  useEffect(() => {\n    switch (bulletType) {\n      case BulletType.Songs:\n        spotify.current.setController(new TrackController())\n        break\n      case BulletType.Albums:\n        spotify.current.setController(new AlbumController())\n        break\n      case BulletType.Artists:\n        spotify.current.setController(new ArtistController())\n        break\n    }\n  }, [bulletType])\n\n  useEffect(() => {\n    if (!spotify.current.isAuthenticated()) spotify.current.authenticateUser()\n    setAuthenticated(spotify.current.isAuthenticated())\n  }, [authenticated])\n\n  const onResultClick = (position: number): void => {\n    if (blank === undefined) {\n      setBlank(searchResult.results[position])\n    } else {\n      setBullet(searchResult.results[position])\n    }\n\n    setSearchResult(new SearchResult(false, []))\n    setState(RouletteState.LOAD)\n  }\n\n  const onSearch = (query: string): void => {\n    spotify.current.search(query).then(result => setSearchResult(result))\n  }\n\n  const onShoot = (isBullet: boolean): void => {\n    spotify.current.play(isBullet ? bullet : blank)\n  }\n\n  const onContinueClick = () => {\n    setState(RouletteState.SPIN)\n    setPlayerOpen(true)\n  }\n\n  const resetRoulette = () => {\n    setBullet(undefined)\n    setBlank(undefined)\n    setState(RouletteState.RESET)\n  }\n\n  const resolveTooltip = (): string => {\n    if (state === RouletteState.IDLE) {\n      if (blank === undefined) {\n        switch (bulletType) {\n          case BulletType.Songs:\n            return 'Search for a song to get started'\n          case BulletType.Albums:\n            return 'Search for an album to get started'\n          case BulletType.Artists:\n            return 'Search for an artist to get started'\n        }\n      } else return 'Search for the bullet!'\n    } else if (state === RouletteState.LOADING) return 'Loading weapon...'\n    else if (state === RouletteState.SHOT) return 'Choose an option'\n\n    return ''\n  }\n\n  if (!authenticated) return null\n  else\n    return (\n      <div className='app'>\n        <Title />\n        <div className='searchContainer'>\n          <SearchBar\n            onSearch={onSearch}\n            onQueryChange={() => setSearchResult(new SearchResult(false, []))}\n            onSettingsClick={toggleSettingsOpen}\n            locked={state !== RouletteState.IDLE}\n            tooltip={resolveTooltip()}\n          />\n          <Results searchResult={searchResult} onResultClick={onResultClick} />\n          <ActionButtons\n            visible={state === RouletteState.SHOT}\n            onRerollClick={() => setState(RouletteState.SPIN)}\n            onResetClick={resetRoulette}\n          />\n        </div>\n        <Roulette\n          blank={blank}\n          bullet={bullet}\n          state={state}\n          setState={setState}\n          chooseBullet={true}\n          onShoot={onShoot}\n        />\n        <WarningDialog\n          visible={!playerOpen && playerOpen !== undefined}\n          onRetryClick={checkPlayerOpen}\n          onContinueClick={onContinueClick}\n        />\n        <Settings\n          visible={settingsOpen}\n          toggleVisibility={toggleSettingsOpen}\n          bulletType={bulletType}\n          setBulletType={setBulletType}\n        />\n      </div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport './ActionButtons.css'\nimport reload from '../../images/reload.svg'\nimport reshoot from '../../images/reshoot.svg'\n\ntype ActionButtonProps = {\n  visible: boolean\n  onRerollClick: () => void\n  onResetClick: () => void\n}\n\nconst ActionButtons: React.FC<ActionButtonProps> = props => {\n  return (\n    <div className={`actionButtonContainer ${props.visible ? 'visible' : ''}`}>\n      <button className='actionButton' onClick={props.onResetClick} >\n        <img src={reload} alt=''></img>\n        Reset Gun.\n      </button>\n      <button className='actionButton' onClick={props.onRerollClick} >\n        <img src={reshoot} alt=''></img>\n        Shoot again!\n      </button>\n    </div>\n  )\n}\n\nexport default ActionButtons\n","import { SpotifyClient } from './Spoitfy'\n\nexport interface ContextController {\n  search(query: string, client: SpotifyClient): Promise<SearchResult>\n}\n\nexport type SpotifyItem = {\n  title: string\n  author: string\n  image: string\n  playParameters: {}\n  shuffle: boolean\n}\n\nexport class SearchResult {\n  constructor(public display: boolean, public results: SpotifyItem[]) {}\n}\n\nexport class TrackController implements ContextController {\n  async search(query: string, client: SpotifyClient): Promise<SearchResult> {\n    const tracks = await client.searchTracks(query)\n    return new SearchResult(true, tracks.tracks.items.slice(0, 3).map(this.formatResult))\n  }\n\n  formatResult(track: SpotifyApi.TrackObjectFull): SpotifyItem {\n    return {\n        title: track.name,\n        author: track.artists[0].name,\n        image: track.album.images[0].url,\n        playParameters: {uris: [track.uri]},\n        shuffle: false\n      }\n  }\n}\n\nexport class AlbumController implements ContextController {\n  async search(query: string, client: SpotifyClient): Promise<SearchResult> {\n    const albums = await client.searchAlbums(query)\n    return new SearchResult(true, albums.albums.items.slice(0,3).map(this.formatResult))\n  }\n\n  formatResult(album: any): SpotifyItem {\n    return {\n        title: album.name,\n        author: album.artists[0].name,\n        image: album.images.length > 0 ? album.images[0].url : '',\n        playParameters: { context_uri: album.uri },\n        shuffle: false\n      }\n  }\n}\n\nexport class ArtistController implements ContextController {\n  async search(query: string, client: SpotifyClient): Promise<SearchResult> {\n    const artists = await client.searchArtists(query)\n    return new SearchResult(true, artists.artists.items.slice(0,3).map(this.formatResult))\n  }\n\n  formatResult(artist: SpotifyApi.ArtistObjectFull): SpotifyItem {\n    return {\n        title: artist.name,\n        author: 'Artist',\n        image: artist.images.length > 0 ? artist.images[0].url : '',\n        playParameters: { context_uri: artist.uri },\n        shuffle: true\n      }\n  }\n}\n","import React from 'react'\nimport './WarningDialog.css'\nimport warning from '../../images/warning.svg'\n\ntype WarningDialogProps = {\n  visible: boolean\n  onRetryClick: () => void\n  onContinueClick: () => void\n}\n\nconst WarningDialog: React.FC<WarningDialogProps> = props => {\n  return (\n    <div className={`warningDialog ${props.visible ? 'visible' : 'hidden'}`}>\n      <img src={warning} alt={'Warning'}></img>\n      <h2>Spotify not found</h2>\n      <p>\n        Make sure you have spotify open and press retry. If you\n        continue no song will play.\n      </p>\n      <button className='retry' onClick={props.onRetryClick}>\n        Retry\n      </button>\n      <button className='continue' onClick={props.onContinueClick}>continue</button>\n    </div>\n  )\n}\n\nexport default WarningDialog\n","import React from 'react'\nimport './SettingChips.css'\n\ntype SettingChipsProps = {\n  chips: string[]\n  selected: number\n  onSelect: (bullet: number) => void\n}\n\nconst SettingChips: React.FC<SettingChipsProps> = props => {\n  const chips = props.chips.map((chip, i) => (\n    <div\n      key={i}\n      className={`chip ${i === props.selected ? 'selected' : ''}`}\n      onClick={() => props.onSelect(i)}\n    >\n      {chip}\n    </div>\n  ))\n\n  return <div className='chipContainer'>{chips}</div>\n}\n\nexport default SettingChips\n","import React from 'react'\nimport './Settings.css'\nimport close from '../../images/close.svg'\nimport SettingChips from '../settingChips/SettingChips';\n\ntype SettingsProps = {\n  visible: boolean\n  bulletType: number\n  setBulletType: (bullet: number) => void\n  toggleVisibility: () => void\n}\n\nconst WarningDialog: React.FC<SettingsProps> = props => {\n  return (\n    <div className={`settingsContainer ${props.visible ? 'visible' : 'hidden'}`} onClick={props.toggleVisibility}>\n      <div className='settingsDialog' onClick={e => e.stopPropagation()}>\n        <h2>Settings</h2>\n        <h3>Bullet Type</h3>\n        <SettingChips selected={props.bulletType} chips={['Songs', 'Albuns', 'Artists']} onSelect={props.setBulletType}/>\n        <img className='close' src={close} onClick={props.toggleVisibility} alt=''></img>\n      </div>\n    </div>\n  )\n}\n\nexport default WarningDialog\n","import React from 'react'\nimport './Results.css'\n\ntype ResultProps = {\n  title: string\n  author: string\n  image: string\n  onClick: () => void\n}\n\nconst Result: React.FC<ResultProps> = props => {\n  return (\n    <div className='result' onClick={props.onClick}>\n      <img className='cover' src={props.image} alt={`${props.title} Album Cover`}></img>\n      <div className='info'>\n        <h2 className='title'>{props.title}</h2>\n        <p className='artist'>{props.author}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Result\n","import React from 'react'\nimport './Results.css'\nimport Result from '../searchResults/Result'\nimport { SearchResult } from '../../utils/ContextController'\n\ntype ResultsProps = {\n  searchResult: SearchResult\n  onResultClick: (position: number) => void\n}\n\nconst Results: React.FC<ResultsProps> = props => {\n  const onResultClick = (position: number) => {\n    props.onResultClick(position)\n  }\n\n  const resultElements = props.searchResult.results.map((result, i) => (\n    <Result key={Math.floor(Math.random() * 10000)} {...result} onClick={() => onResultClick(i)} />\n  ))\n\n  if (props.searchResult.display) {\n    if (props.searchResult.results.length > 0)\n      return <div className='results'>{resultElements}</div>\n    else\n      return (\n        <div className='results'>\n          <div className='noResult'>\n            <h2 className='title'>No results found.</h2>\n          </div>\n        </div>\n      )\n  }\n  return null\n}\n\nexport default Results\n","import React from 'react'\nimport './Title.css'\nimport logo from '../../images/logo.png'\n\nconst Title: React.FC = () => {\n  return (\n    <div className='siteTitle'>\n      <img src={logo} alt=''/>\n      <div>\n        <h1>Spotify</h1>\n        <h1>Roulette</h1>\n      </div>\n    </div>\n  )\n}\n\nexport default Title\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}