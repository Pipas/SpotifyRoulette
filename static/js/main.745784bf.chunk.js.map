{"version":3,"sources":["images/close.svg","images/search.svg","images/roulette.svg","images/spin.svg","images/settings.svg","images/warning.svg","components/roulette/Roulette.tsx","utils/Spoitfy.ts","components/songInput/searchResult/Result.tsx","components/songInput/songInput.tsx","components/roulette/RouletteAlbum.tsx","components/app/App.tsx","components/actionButtons/ActionButtons.tsx","utils/ContextController.ts","components/warningDialog/WarningDialog.tsx","components/settingChips/SettingChips.tsx","components/settings/Settings.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","LoadState","Spotify","controller","Object","classCallCheck","this","client","auth","deviceId","SpotifyWebApi","createClass","key","value","access_token","window","location","hash","substring","split","setAccessToken","href","concat","join","_search","asyncToGenerator","regenerator_default","a","mark","_callee","query","wrap","_context","prev","next","search","abrupt","sent","stop","_x","apply","arguments","item","undefined","setShuffle","shuffle","play","objectSpread","device_id","playParameters","catch","_hasPlayerOpen","_callee2","devices","_context2","getMyDevices","length","id","Result","props","react_default","createElement","className","onClick","src","image","alt","title","author","SongInput","searchInput","useRef","_useState","useState","_useState2","slicedToArray","state","setState","_useState3","_useState4","setQuery","updateSize","useCallback","focused","onSearchClick","onSearch","useEffect","input","current","focus","focusout","onKeypress","e","addEventListener","removeEventListener","locked","resultElements","searchResult","results","map","result","i","songInput_searchResult_Result","assign","position","onResultClick","style","height","display","type","ref","onChange","target","placeholder","tooltip","disabled","SearchLogo","RouletteAlbum","loadSound","Howl","useLoadSound","loading","shotSound","useShootSound","shot","transform","load","BulletType","RouletteState","Roulette","chosenShot","setChosenShot","_useState5","_useState6","angle","setAngle","_useState7","EMPTY","_useState8","loadState","setLoadState","_useLoadShots","chooseBullet","loadedShots","setLoadedShots","setTimeout","incrementShot","useLoadShots","_useLoadShots2","loadShots","resetLoadShots","useSpinSound","SPINING","albums","blank","bullet","roulette_RouletteAlbum","SHOT","LOADING","loadRoulette","callback","waitTime","resetRoulette","setCSSPreviousAngle","n","document","documentElement","setProperty","LOAD","HALF","IDLE","READY","FULL","SPIN","randomShot","randomChosenShot","onShoot","RESET","Math","floor","random","roulette","ActionButtons","visible","onResetClick","close","onRerollClick","spin","SearchResult","TrackController","tracks","searchTracks","items","slice","formatResult","_x2","track","name","artists","album","images","url","uris","uri","AlbumController","_search2","searchAlbums","_x3","_x4","context_uri","ArtistController","_search3","_callee3","_context3","searchArtists","_x5","_x6","artist","WarningDialog","warning","onRetryClick","onContinueClick","SettingChips","chips","chip","selected","onSelect","components_settingChips_SettingChips","bulletType","setBulletType","toggleVisibility","App","spotify","setBullet","_useState9","_useState10","setBlank","_useState11","Songs","_useState12","_useState13","_useState14","setSearchResult","_usePlayerOpen","playerOpen","setPlayerOpen","checkPlayerOpen","hasPlayerOpen","then","isOpen","usePlayerOpen","_usePlayerOpen2","_useSettingsOpen","settingsOpen","setSettingsOpen","useSettingsOpen","_useSettingsOpen2","toggleSettingsOpen","setController","Albums","Artists","isAuthenticated","authenticateUser","songInput","components_actionButtons_ActionButtons","components_roulette_Roulette","isBullet","settingsGear","components_warningDialog_WarningDialog","settings_Settings","Boolean","hostname","match","ReactDOM","render","components_app_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.745784bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/close.e85191c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.97161617.svg\";","module.exports = __webpack_public_path__ + \"static/media/roulette.dc8d006c.svg\";","module.exports = __webpack_public_path__ + \"static/media/spin.8f3bc11a.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.7c9f5af4.svg\";","module.exports = __webpack_public_path__ + \"static/media/warning.34c3adc3.svg\";","import React, { useState, useEffect, useRef } from 'react'\nimport { Howl } from 'howler'\nimport './Roulette.css'\nimport roulette from '../../images/roulette.svg'\nimport RouletteAlbum from './RouletteAlbum'\nimport { RouletteState } from '../app/App'\nimport { SpotifyItem } from '../../utils/ContextController';\n\nenum LoadState {\n  EMPTY = 'empty',\n  HALF = 'half',\n  FULL = 'full'\n}\n\ntype RouletteProps = {\n  blank: SpotifyItem | undefined\n  bullet: SpotifyItem | undefined\n  state: RouletteState\n  setState: React.Dispatch<React.SetStateAction<RouletteState>>\n  chooseBullet: boolean\n  onShoot: (isBullet: boolean) => void\n}\n\nconst useSpinSound = (play: boolean) => {\n  const loadSound = useRef<Howl>(\n    new Howl({\n      src: '/audio/spin.mp3'\n    })\n  )\n\n  useEffect(() => {\n    if (play) loadSound.current.play()\n  }, [play])\n}\n\nconst useLoadShots = (chooseBullet: boolean): [number, () => void, () => void] => {\n  const [loadedShots, setLoadedShots] = useState(-1)\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (chooseBullet) {\n        if (loadedShots >= 0 && loadedShots < 4) incrementShot()\n        if (loadedShots === 5) incrementShot()\n      } else {\n        if (loadedShots >= 0 && loadedShots < 6) incrementShot()\n      }\n    }, 1500)\n  }, [loadedShots, chooseBullet])\n\n  const incrementShot = (): void =>\n    setLoadedShots(loadedShots => loadedShots + 1)\n\n  const resetLoadShots = () => setLoadedShots(-1)\n\n  return [loadedShots, incrementShot, resetLoadShots]\n}\n\nconst Roulette: React.FC<RouletteProps> = props => {\n  const [chosenShot, setChosenShot] = useState(-1)\n  const [angle, setAngle] = useState(0)\n  const [loadState, setLoadState] = useState(LoadState.EMPTY)\n  const [loadedShots, loadShots, resetLoadShots] = useLoadShots(props.chooseBullet)\n\n  useSpinSound(props.state === RouletteState.SPINING)\n\n  const albums = [\n    props.blank,\n    props.blank,\n    props.blank,\n    props.blank,\n    props.blank,\n    props.bullet\n  ].map((item, i) => (\n    <RouletteAlbum\n      key={i}\n      src={item !== undefined ? item.image : ''}\n      position={i}\n      shot={i === chosenShot && props.state === RouletteState.SHOT}\n      load={i <= loadedShots}\n      loading={i === loadedShots && props.state === RouletteState.LOADING}\n    />\n  ))\n\n  // Loads shots and calls callback after waitTime\n  const loadRoulette = (callback: () => void, waitTime: number): void => {\n    loadShots()\n\n    setTimeout(() => {\n      callback()\n    }, waitTime)\n\n    props.setState(RouletteState.LOADING)\n  }\n\n  const resetRoulette = (): void => {\n    setChosenShot(-1)\n    setAngle(0)\n    resetLoadShots()\n    setLoadState(LoadState.EMPTY)\n  }\n\n  const setCSSPreviousAngle = (n: number) => {\n    document.documentElement.style.setProperty('--previous', `${n}`)\n  }\n\n  useEffect(() => {\n    if (props.state === RouletteState.LOAD) {\n      if (props.chooseBullet) {\n        if (loadState === LoadState.EMPTY) {\n          loadRoulette(() => {\n            setLoadState(LoadState.HALF)\n            setAngle(5)\n            props.setState(RouletteState.IDLE)\n          }, 7500)\n        } else if (loadState === LoadState.HALF) {\n          loadRoulette(() => {\n            props.setState(RouletteState.READY)\n            setLoadState(LoadState.FULL)\n            setCSSPreviousAngle(5)\n          }, 500)\n        } else {\n          resetRoulette()\n        }\n      } else {\n        resetRoulette()\n\n        loadRoulette(() => {\n          setAngle(5)\n          props.setState(RouletteState.READY)\n          setLoadState(LoadState.FULL)\n          setCSSPreviousAngle(5)\n        }, 8300)\n      }\n    } else if (props.state === RouletteState.SPIN && loadState === LoadState.FULL) {\n      const randomShot = randomChosenShot()\n\n      setTimeout(() => {\n        setAngle(randomShot)\n        props.setState(RouletteState.SHOT)\n      }, 1700)\n\n      props.setState(RouletteState.SPINING)\n    } else if (props.state === RouletteState.SHOT) {\n      setCSSPreviousAngle(chosenShot)\n      props.onShoot(chosenShot === 5)\n    } else if (props.state === RouletteState.RESET) {\n      resetRoulette()\n      props.setState(RouletteState.IDLE)\n    }\n  })\n\n  const randomChosenShot = (): number => {\n    const randomShot = Math.floor(Math.random() * 6)\n    document.documentElement.style.setProperty('--next', `${randomShot}`)\n    setChosenShot(randomShot)\n\n    return randomShot\n  }\n\n  return (\n    <div\n      className={`roulette ${props.state} ${loadState}`}\n      style={{ transform: `rotate(calc(60deg * ${angle}))` }}\n    >\n      {albums}\n      <img src={roulette} alt=''></img>\n    </div>\n  )\n}\n\nexport default Roulette\n","import SpotifyWebApi from 'spotify-web-api-js'\nimport {\n  ContextController,\n  SearchResult,\n  SpotifyItem\n} from './ContextController'\n\nexport type SpotifyClient = SpotifyWebApi.SpotifyWebApiJs\n\nexport class Spotify {\n  private client: SpotifyClient\n  private auth: boolean = false\n  private deviceId: string = ''\n  private controller: ContextController\n\n  constructor(controller: ContextController) {\n    this.client = new SpotifyWebApi()\n    this.controller = controller\n  }\n\n  setController(controller: ContextController) {\n    this.controller = controller\n  }\n\n  authenticateUser() {\n    const access_token = window.location.hash\n      .substring(1)\n      .split('&')[0]\n      .split('=')[1]\n    window.location.hash = ''\n\n    const authEndpoint = 'https://accounts.spotify.com/authorize'\n    const clientId = '41e10dc3f3594667b190b3681fdee8ca'\n    const redirectUri =\n      process.env.NODE_ENV === 'production'\n        ? 'https://spotifyroulette.paulocorreia.me'\n        : 'http://localhost:3000/'\n    const scopes = [\n      'user-top-read',\n      'user-modify-playback-state',\n      'user-read-playback-state'\n    ]\n\n    // If there is no token, redirect to Spotify authorization\n    if (!access_token) {\n      window.location.href = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n        '%20'\n      )}&response_type=token&show_dialog=true`\n    } else {\n      this.client.setAccessToken(access_token)\n      this.auth = true\n    }\n  }\n\n  async search(query: string): Promise<SearchResult> {\n    return await this.controller.search(query, this.client)\n  }\n\n  play(item: SpotifyItem | undefined) {\n    if (this.deviceId !== '' && item !== undefined) {\n      this.client.setShuffle(item.shuffle)\n      this.client.play({ device_id: this.deviceId, ...item.playParameters }).catch()\n    }\n  }\n\n  async hasPlayerOpen(): Promise<boolean> {\n    const devices = await this.client.getMyDevices()\n    if (devices.devices.length === 0) return false\n    else {\n      if (devices.devices[0].id !== null) {\n        this.deviceId = devices.devices[0].id\n        return true\n      } else return false\n    }\n  }\n\n  isAuthenticated() {\n    return this.auth\n  }\n}\n","import React from 'react'\nimport './Result.css'\n\ntype ResultProps = {\n  title: string\n  author: string\n  image: string\n  onClick: () => void\n}\n\nconst Result: React.FC<ResultProps> = props => {\n  return (\n    <div className='result' onClick={props.onClick}>\n      <img className='cover' src={props.image} alt={`${props.title} Album Cover`}></img>\n      <div className='info'>\n        <h2 className='title'>{props.title}</h2>\n        <p className='artist'>{props.author}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Result\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport './SongInput.css'\nimport SearchLogo from '../../images/search.svg'\nimport Result from './searchResult/Result'\nimport { SearchResult } from '../../utils/ContextController'\n\ntype onChange = (event: React.ChangeEvent<HTMLInputElement>) => void\n\ntype SongInputProps = {\n  searchResult: SearchResult\n  onSearch: (query: string) => void\n  onResultClick: (position: number) => void\n  locked: boolean\n  tooltip: string\n}\n\nconst SongInput: React.FC<SongInputProps> = props => {\n  const searchInput = useRef<HTMLInputElement>(null)\n  const [state, setState] = useState('')\n  const [query, setQuery] = useState('')\n\n  const updateSize = useCallback(\n    (focused: boolean) => {\n      if (focused && query.length === 0) setState('focused')\n      else if (focused || query.length > 0) setState('focused')\n      else {\n        setState('')\n      }\n    },\n    [query.length]\n  )\n\n  const onSearchClick = useCallback(() => {\n    if (query !== null && query !== '') {\n      props.onSearch(query)\n    }\n  }, [query, props])\n\n  const onResultClick = (position: number) => {\n    setQuery('')\n    props.onResultClick(position)\n  }\n\n  useEffect(() => {\n    const input = searchInput.current\n    const focus = () => updateSize(true)\n    const focusout = () => updateSize(false)\n    const onKeypress = (e: KeyboardEvent) => {\n      if (e.key === 'Enter') onSearchClick()\n    }\n\n    if (input !== null) {\n      input.addEventListener('focus', focus)\n      input.addEventListener('focusout', focusout)\n      input.addEventListener('keypress', onKeypress)\n    }\n\n    return () => {\n      if (input !== null) {\n        input.removeEventListener('focus', focus)\n        input.removeEventListener('focusout', focusout)\n        input.removeEventListener('keypress', onKeypress)\n      }\n    }\n  }, [onSearchClick, updateSize])\n\n  useEffect(() => {\n    if (props.locked) setState('')\n  }, [props.locked])\n\n  const onQueryChange: onChange = e => {\n    setQuery(e.target.value)\n  }\n\n  const resultElements =\n    props.searchResult.results.length === 0 ? (\n      <div className='noResult'>\n        <h2 className='title'>No result found.</h2>\n      </div>\n    ) : (\n      props.searchResult.results.map((result, i) => (\n        <Result key={i} {...result} onClick={() => onResultClick(i)} />\n      ))\n    )\n\n  const calculateHeight = (): number => {\n    if (props.searchResult.display) {\n      if (props.searchResult.results.length === 0) return 144\n      else return 88 + 64 * props.searchResult.results.length + 8\n    }\n\n    return 88\n  }\n\n  return (\n    <div\n      className={`input ${state}`}\n      style={{\n        height: `${calculateHeight()}px`\n      }}\n    >\n      <div className='searchBar'>\n        <input\n          type='text'\n          ref={searchInput}\n          value={query}\n          onChange={onQueryChange}\n          placeholder={props.tooltip}\n          disabled={props.locked}\n        />\n        <button onClick={onSearchClick}>\n          <img src={SearchLogo} alt=''></img>\n        </button>\n      </div>\n      {props.searchResult.display && (\n        <div className='results'>{resultElements}</div>\n      )}\n    </div>\n  )\n}\n\nexport default SongInput\n","import React, { useRef, useEffect } from 'react'\nimport './Roulette.css'\nimport { Howl } from 'howler'\n\ntype RouletteAlbumProps = {\n  position: number\n  src: string\n  shot: boolean\n  load: boolean\n  loading: boolean\n}\n\nconst useLoadSound = (play: boolean) => {\n  const loadSound = useRef<Howl>(\n    new Howl({\n      src: '/audio/load.mp3'\n    })\n  )\n\n  useEffect(() => {\n    if (play) loadSound.current.play()\n  }, [play])\n}\n\nconst useShootSound = (play: boolean, position: number) => {\n  const shotSound = useRef<Howl>(\n    new Howl({\n      src: position === 5 ? '/audio/shot.mp3' : '/audio/blank.mp3'\n    })\n  )\n\n  useEffect(() => {\n    if (play) shotSound.current.play()\n  }, [play])\n}\n\nconst RouletteAlbum: React.FC<RouletteAlbumProps> = props => {\n  useLoadSound(props.loading)\n  useShootSound(props.shot, props.position)\n\n  return (\n    <div\n      className='container'\n      style={{ transform: `rotate(${-60 * props.position}deg)` }}\n    >\n      <div className={`cover ${props.load && 'load'}`}>\n        <img className={props.shot ? 'shot' : ''} src={props.src} alt='' />\n      </div>\n    </div>\n  )\n}\n\nexport default RouletteAlbum\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport { Spotify } from '../../utils/Spoitfy'\nimport './App.css'\nimport SongInput from '../songInput/songInput'\nimport Roulette from '../roulette/Roulette'\nimport ActionButtons from '../actionButtons/ActionButtons'\nimport settingsGear from '../../images/settings.svg'\nimport { TrackController, SearchResult, SpotifyItem, AlbumController, ArtistController } from '../../utils/ContextController'\nimport WarningDialog from '../warningDialog/WarningDialog'\nimport Settings from '../settings/Settings'\n\nexport enum BulletType {\n  Songs, Albums, Artists\n}\n\nexport enum RouletteState {\n  RESET = 'reset',\n  IDLE = 'idle',\n  LOAD = 'load',\n  LOADING = 'loading',\n  READY = 'ready',\n  SPIN = 'spin',\n  SPINING = 'spining',\n  SHOT = 'shot'\n}\n\nconst useSettingsOpen = (): [boolean, () => void] => {\n  const [settingsOpen, setSettingsOpen] = useState(false)\n\n  const toggleSettings = () => {\n    setSettingsOpen(!settingsOpen)\n  }\n\n  return [settingsOpen, toggleSettings]\n}\n\nconst usePlayerOpen = (spotify: Spotify, state: RouletteState, setState: React.Dispatch<React.SetStateAction<RouletteState>>): [boolean, () => void, React.Dispatch<any>] => {\n  const [playerOpen, setPlayerOpen] = useState()\n\n  const checkPlayerOpen = useCallback(() => spotify.hasPlayerOpen().then(isOpen => {setPlayerOpen(isOpen)}),[spotify])\n\n  useEffect(() => {\n    if (state === RouletteState.READY) {\n      if(!playerOpen)\n        checkPlayerOpen()\n      else\n        setState(RouletteState.SPIN)\n    }\n  }, [playerOpen, checkPlayerOpen, state, setState])\n\n\n  return [playerOpen, checkPlayerOpen, setPlayerOpen]\n}\n\nconst App: React.FC = () => {\n  const spotify = useRef(new Spotify(new TrackController()))\n  const [state, setState] = useState(RouletteState.IDLE)\n  const [bullet, setBullet] = useState<SpotifyItem>()\n  const [blank, setBlank] = useState<SpotifyItem>()\n  const [bulletType, setBulletType] = useState(BulletType.Songs)\n  const [searchResult, setSearchResult] = useState<SearchResult>(new SearchResult(false, []))\n  const [playerOpen, checkPlayerOpen, setPlayerOpen] = usePlayerOpen(spotify.current, state, setState)\n  const [settingsOpen, toggleSettingsOpen] = useSettingsOpen()\n\n  useEffect(() => {\n    switch (bulletType) {\n      case BulletType.Songs:\n        spotify.current.setController(new TrackController())\n        break;\n      case BulletType.Albums:\n        spotify.current.setController(new AlbumController())\n        break;\n      case BulletType.Artists:\n        spotify.current.setController(new ArtistController())\n        break;\n      default:\n        break;\n    }\n  }, [bulletType])\n\n  useEffect(() => {\n    if (!spotify.current.isAuthenticated()) spotify.current.authenticateUser()\n  }, [])\n\n  const onResultClick = (position: number): void => {\n    if (blank === undefined) {\n      setBlank(searchResult.results[position])\n    } else {\n      setBullet(searchResult.results[position])\n    }\n\n    setSearchResult(new SearchResult(false, []))\n    setState(RouletteState.LOAD)\n  }\n\n  const onSearch = (query: string): void => {\n    spotify.current.search(query).then(\n      result => setSearchResult(result)\n    )\n  }\n\n  const onShoot = (isBullet: boolean): void => {\n    spotify.current.play(isBullet ? bullet : blank)\n  }\n\n  const onContinueClick = () => {\n    setState(RouletteState.SPIN)\n    setPlayerOpen(true)\n  }\n\n  const resetRoulette = () => {\n    setBullet(undefined)\n    setBlank(undefined)\n    setState(RouletteState.RESET)\n  }\n\n  const resolveTooltip = () : string => {\n    if (state ===  RouletteState.IDLE)\n      return blank === undefined ? 'Search for the blanks' : 'Search for the bullet!'\n    else if(state === RouletteState.LOADING)\n      return 'Loading weapon.'\n    else if(state === RouletteState.SHOT)\n      return 'Reset or Reroll'\n    else\n      return ''\n  }\n\n  return (\n    <div className='app'>\n      <div className='controls'>\n        <SongInput\n          searchResult={searchResult}\n          onSearch={onSearch}\n          onResultClick={onResultClick}\n          locked={state !== RouletteState.IDLE}\n          tooltip={resolveTooltip()}\n        />\n        <ActionButtons visible={state === RouletteState.SHOT} onRerollClick={() => setState(RouletteState.SPIN)} onResetClick={resetRoulette}/>\n      </div>\n      <Roulette\n        blank={blank}\n        bullet={bullet}\n        state={state}\n        setState={setState}\n        chooseBullet={true}\n        onShoot={onShoot}\n      />\n      <img className='settingsButton' src={settingsGear} onClick={toggleSettingsOpen} alt=''></img>\n      <WarningDialog visible={!playerOpen && playerOpen !== undefined} onRetryClick={checkPlayerOpen} onContinueClick={onContinueClick} />\n      <Settings visible={settingsOpen} toggleVisibility={toggleSettingsOpen} bulletType={bulletType} setBulletType={setBulletType}/>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport './ActionButtons.css'\nimport spin from '../../images/spin.svg'\nimport close from '../../images/close.svg'\n\ntype ActionButtonProps = {\n  visible: boolean\n  onRerollClick: () => void\n  onResetClick: () => void\n}\n\nconst ActionButtons: React.FC<ActionButtonProps> = props => {\n  return (\n    <div className={`actionButtonContainer ${props.visible ? 'visible' : ''}`}>\n      <button className='actionButton' onClick={props.onResetClick} >\n        <img src={close} alt=''></img>\n      </button>\n      <button className='actionButton' onClick={props.onRerollClick} >\n        <img src={spin} alt=''></img>\n      </button>\n    </div>\n  )\n}\n\nexport default ActionButtons\n","import { SpotifyClient } from './Spoitfy'\n\nexport interface ContextController {\n  search(query: string, client: SpotifyClient): Promise<SearchResult>\n}\n\nexport type SpotifyItem = {\n  title: string\n  author: string\n  image: string\n  playParameters: {}\n  shuffle: boolean\n}\n\nexport class SearchResult {\n  constructor(public display: boolean, public results: SpotifyItem[]) {}\n}\n\nexport class TrackController implements ContextController {\n  async search(query: string, client: SpotifyClient): Promise<SearchResult> {\n    const tracks = await client.searchTracks(query)\n    return new SearchResult(true, tracks.tracks.items.slice(0, 3).map(this.formatResult))\n  }\n\n  formatResult(track: SpotifyApi.TrackObjectFull): SpotifyItem {\n    return {\n        title: track.name,\n        author: track.artists[0].name,\n        image: track.album.images[0].url,\n        playParameters: {uris: [track.uri]},\n        shuffle: false\n      }\n  }\n}\n\nexport class AlbumController implements ContextController {\n  async search(query: string, client: SpotifyClient): Promise<SearchResult> {\n    const albums = await client.searchAlbums(query)\n    return new SearchResult(true, albums.albums.items.slice(0,3).map(this.formatResult))\n  }\n\n  formatResult(album: any): SpotifyItem {\n    return {\n        title: album.name,\n        author: album.artists[0].name,\n        image: album.images.length > 0 ? album.images[0].url : '',\n        playParameters: { context_uri: album.uri },\n        shuffle: false\n      }\n  }\n}\n\nexport class ArtistController implements ContextController {\n  async search(query: string, client: SpotifyClient): Promise<SearchResult> {\n    const artists = await client.searchArtists(query)\n    return new SearchResult(true, artists.artists.items.slice(0,3).map(this.formatResult))\n  }\n\n  formatResult(artist: SpotifyApi.ArtistObjectFull): SpotifyItem {\n    return {\n        title: artist.name,\n        author: 'Artist',\n        image: artist.images.length > 0 ? artist.images[0].url : '',\n        playParameters: { context_uri: artist.uri },\n        shuffle: true\n      }\n  }\n}\n","import React from 'react'\nimport './WarningDialog.css'\nimport warning from '../../images/warning.svg'\n\ntype WarningDialogProps = {\n  visible: boolean\n  onRetryClick: () => void\n  onContinueClick: () => void\n}\n\nconst WarningDialog: React.FC<WarningDialogProps> = props => {\n  return (\n    <div className={`warningDialog ${props.visible ? 'visible' : 'hidden'}`}>\n      <img src={warning} alt={'Warning'}></img>\n      <h2>Spotify not found</h2>\n      <p>\n        Make sure you have spotify open and press retry. If you\n        continue no song will play.\n      </p>\n      <button className='retry' onClick={props.onRetryClick}>\n        Retry\n      </button>\n      <button className='continue' onClick={props.onContinueClick}>continue</button>\n    </div>\n  )\n}\n\nexport default WarningDialog\n","import React from 'react'\nimport './SettingChips.css'\n\ntype SettingChipsProps = {\n  chips: string[]\n  selected: number\n  onSelect: (bullet: number) => void\n}\n\nconst SettingChips: React.FC<SettingChipsProps> = props => {\n  const chips = props.chips.map((chip, i) => (\n    <div\n      key={i}\n      className={`chip ${i === props.selected ? 'selected' : ''}`}\n      onClick={() => props.onSelect(i)}\n    >\n      {chip}\n    </div>\n  ))\n\n  return <div className='chipContainer'>{chips}</div>\n}\n\nexport default SettingChips\n","import React from 'react'\nimport './Settings.css'\nimport close from '../../images/close.svg'\nimport SettingChips from '../settingChips/SettingChips';\n\ntype SettingsProps = {\n  visible: boolean\n  bulletType: number\n  setBulletType: (bullet: number) => void\n  toggleVisibility: () => void\n}\n\nconst WarningDialog: React.FC<SettingsProps> = props => {\n  return (\n    <div className={`settingsDialog ${props.visible ? 'visible' : 'hidden'}`}>\n      <h2>Settings</h2>\n      <h3>Bullet Type</h3>\n      <SettingChips selected={props.bulletType} chips={['Songs', 'Albuns', 'Artists']} onSelect={props.setBulletType}/>\n      <img className='close' src={close} onClick={props.toggleVisibility} alt=''></img>\n    </div>\n  )\n}\n\nexport default WarningDialog\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}