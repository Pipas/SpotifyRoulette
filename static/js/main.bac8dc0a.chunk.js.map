{"version":3,"sources":["images/search.svg","images/roulette.svg","images/spin.svg","images/warning.svg","components/roulette/Roulette.tsx","utils/Spoitfy.ts","components/songInput/searchResult/Result.tsx","components/songInput/songInput.tsx","components/roulette/RouletteAlbum.tsx","components/app/App.tsx","components/actionButton/ActionButton.tsx","utils/ContextController.ts","components/warningDialog/WarningDialog.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","LoadState","Spotify","Object","classCallCheck","this","client","auth","deviceId","SpotifyWebApi","createClass","key","value","access_token","window","location","hash","substring","split","setAccessToken","href","concat","join","query","searchTracks","options","play","objectSpread","device_id","catch","_hasPlayerOpen","asyncToGenerator","regenerator_default","a","mark","_callee","devices","wrap","_context","prev","next","getMyDevices","sent","length","abrupt","id","stop","apply","arguments","Result","props","react_default","createElement","className","onClick","src","alt","title","author","SongInput","searchInput","useRef","_useState","useState","_useState2","slicedToArray","state","setState","_useState3","_useState4","setQuery","updateSize","useCallback","focused","onSearchClick","onSearch","useEffect","input","current","focus","focusout","onKeypress","e","addEventListener","removeEventListener","locked","resultElements","results","map","result","i","songInput_searchResult_Result","assign","onResultClick","style","height","type","ref","onChange","target","placeholder","disabled","SearchLogo","RouletteAlbum","loadSound","Howl","useLoadSound","loading","position","shotSound","useShootSound","shot","transform","load","RouletteState","Roulette","chosenShot","setChosenShot","_useState5","_useState6","angle","setAngle","_useState7","EMPTY","_useState8","loadState","setLoadState","_useLoadShots","chooseBullet","loadedShots","setLoadedShots","setTimeout","incrementShot","useLoadShots","_useLoadShots2","loadShots","resetLoadShots","useSpinSound","SPINING","albums","blank","bullet","roulette_RouletteAlbum","SHOT","LOADING","loadRoulette","callback","waitTime","resetRoulette","setCSSPreviousAngle","n","document","documentElement","setProperty","LOAD","HALF","IDLE","READY","FULL","SPIN","randomShot","randomChosenShot","onShoot","Math","floor","random","roulette","ActionButton","visible","TrackController","_ContextController","possibleConstructorReturn","getPrototypeOf","inherits","_this","spotify","searchTrack","then","data","setResults","tracks","items","slice","item","name","artists","album","images","url","undefined","track","uris","uri","ContextController","WarningDialog","warning","onRetryClick","onContinueClick","App","setBullet","_useState9","_useState10","setBlank","controller","_usePlayerOpen","playerOpen","setPlayerOpen","checkPlayerOpen","hasPlayerOpen","isOpen","usePlayerOpen","_usePlayerOpen2","isAuthenticated","authenticateUser","songInput","formatResults","search","components_actionButton_ActionButton","spin","components_roulette_Roulette","getItemSrc","isBullet","components_warningDialog_WarningDialog","Boolean","hostname","match","ReactDOM","render","components_app_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bac8dc0a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.97161617.svg\";","module.exports = __webpack_public_path__ + \"static/media/roulette.dc8d006c.svg\";","module.exports = __webpack_public_path__ + \"static/media/spin.8f3bc11a.svg\";","module.exports = __webpack_public_path__ + \"static/media/warning.34c3adc3.svg\";","import React, { useState, useEffect, useRef } from 'react'\nimport { Howl } from 'howler'\nimport './Roulette.css'\nimport roulette from '../../images/roulette.svg'\nimport RouletteAlbum from './RouletteAlbum'\nimport { RouletteState } from '../app/App'\n\nenum LoadState {\n  EMPTY = 'empty',\n  HALF = 'half',\n  FULL = 'full'\n}\n\ntype RouletteProps = {\n  blank: string\n  bullet: string\n  state: RouletteState\n  setState: React.Dispatch<React.SetStateAction<RouletteState>>\n  chooseBullet: boolean\n  onShoot: (isBullet: boolean) => void\n}\n\nconst useSpinSound = (play: boolean) => {\n  const loadSound = useRef<Howl>(\n    new Howl({\n      src: '/audio/spin.mp3'\n    })\n  )\n\n  useEffect(() => {\n    if (play) loadSound.current.play()\n  }, [play])\n}\n\nconst useLoadShots = (chooseBullet: boolean): [number, () => void, () => void] => {\n  const [loadedShots, setLoadedShots] = useState(-1)\n\n  useEffect(() => {\n    setTimeout(() => {\n      if (chooseBullet) {\n        if (loadedShots >= 0 && loadedShots < 4) incrementShot()\n        if (loadedShots === 5) incrementShot()\n      } else {\n        if (loadedShots >= 0 && loadedShots < 6) incrementShot()\n      }\n    }, 1500)\n  }, [loadedShots, chooseBullet])\n\n  const incrementShot = (): void =>\n    setLoadedShots(loadedShots => loadedShots + 1)\n\n  const resetLoadShots = () => setLoadedShots(-1)\n\n  return [loadedShots, incrementShot, resetLoadShots]\n}\n\nconst Roulette: React.FC<RouletteProps> = props => {\n  const [chosenShot, setChosenShot] = useState(-1)\n  const [angle, setAngle] = useState(0)\n  const [loadState, setLoadState] = useState(LoadState.EMPTY)\n  const [loadedShots, loadShots, resetLoadShots] = useLoadShots(props.chooseBullet)\n\n  useSpinSound(props.state === RouletteState.SPINING)\n\n  const albums = [\n    props.blank,\n    props.blank,\n    props.blank,\n    props.blank,\n    props.blank,\n    props.bullet\n  ].map((src, i) => (\n    <RouletteAlbum\n      key={i}\n      src={src}\n      position={i}\n      shot={i === chosenShot && props.state === RouletteState.SHOT}\n      load={i <= loadedShots}\n      loading={i === loadedShots && props.state === RouletteState.LOADING}\n    />\n  ))\n\n  // Loads shots and calls callback after waitTime\n  const loadRoulette = (callback: () => void, waitTime: number): void => {\n    loadShots()\n\n    setTimeout(() => {\n      callback()\n    }, waitTime)\n\n    props.setState(RouletteState.LOADING)\n  }\n\n  const resetRoulette = (): void => {\n    setChosenShot(-1)\n    setAngle(0)\n    resetLoadShots()\n    setLoadState(LoadState.EMPTY)\n  }\n\n  const setCSSPreviousAngle = (n: number) => {\n    document.documentElement.style.setProperty('--previous', `${n}`)\n  }\n\n  useEffect(() => {\n    if (props.state === RouletteState.LOAD) {\n      if (props.chooseBullet) {\n        if (loadState === LoadState.EMPTY) {\n          loadRoulette(() => {\n            setLoadState(LoadState.HALF)\n            setAngle(5)\n            props.setState(RouletteState.IDLE)\n          }, 7500)\n        } else if (loadState === LoadState.HALF) {\n          loadRoulette(() => {\n            props.setState(RouletteState.READY)\n            setLoadState(LoadState.FULL)\n            setCSSPreviousAngle(5)\n          }, 500)\n        } else {\n          resetRoulette()\n        }\n      } else {\n        resetRoulette()\n\n        loadRoulette(() => {\n          setAngle(5)\n          props.setState(RouletteState.READY)\n          setLoadState(LoadState.FULL)\n          setCSSPreviousAngle(5)\n        }, 8300)\n      }\n    } else if (props.state === RouletteState.SPIN && loadState === LoadState.FULL) {\n      const randomShot = randomChosenShot()\n\n      setTimeout(() => {\n        setAngle(randomShot)\n        props.setState(RouletteState.SHOT)\n      }, 1700)\n\n      props.setState(RouletteState.SPINING)\n    } else if (props.state === RouletteState.SHOT) {\n      setCSSPreviousAngle(chosenShot)\n      props.onShoot(chosenShot === 5)\n      props.setState(RouletteState.IDLE)\n    }\n  })\n\n  const randomChosenShot = (): number => {\n    const randomShot = Math.floor(Math.random() * 6)\n    document.documentElement.style.setProperty('--next', `${randomShot}`)\n    setChosenShot(randomShot)\n\n    return randomShot\n  }\n\n  return (\n    <div\n      className={`roulette ${props.state} ${loadState}`}\n      style={{ transform: `rotate(calc(60deg * ${angle}))` }}\n    >\n      {albums}\n      <img src={roulette} alt=''></img>\n    </div>\n  )\n}\n\nexport default Roulette\n","import SpotifyWebApi from 'spotify-web-api-js'\n\nexport class Spotify {\n  private client: SpotifyWebApi.SpotifyWebApiJs\n  private auth: boolean = false\n  private deviceId: string = ''\n\n  constructor() {\n    this.client = new SpotifyWebApi()\n  }\n\n  authenticateUser() {\n    const access_token = window.location.hash\n      .substring(1)\n      .split('&')[0]\n      .split('=')[1]\n    window.location.hash = ''\n\n    const authEndpoint = 'https://accounts.spotify.com/authorize'\n    const clientId = '41e10dc3f3594667b190b3681fdee8ca'\n    const redirectUri = process.env.NODE_ENV === 'production' ? 'https://spotifyroulette.paulocorreia.me' : 'http://localhost:3000/'\n    const scopes = [\n      'user-top-read',\n      'user-modify-playback-state',\n      'user-read-playback-state'\n    ];\n\n    // If there is no token, redirect to Spotify authorization\n    if (!access_token) {\n      window.location.href = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join('%20')}&response_type=token&show_dialog=true`\n    } else {\n      this.client.setAccessToken(access_token)\n      this.auth = true\n    }\n  }\n\n  searchTrack(query: string): Promise<SpotifyApi.TrackSearchResponse> {\n    return this.client.searchTracks(query)\n  }\n\n  play(options: SpotifyApi.PlayParameterObject) {\n    if(this.deviceId !== '')\n      this.client.play({device_id: this.deviceId, ...options}).catch()\n  }\n\n  async hasPlayerOpen() : Promise<boolean> {\n    const devices = await this.client.getMyDevices()\n    if (devices.devices.length === 0)\n      return false\n    else {\n      if(devices.devices[0].id !== null) {\n        this.deviceId = devices.devices[0].id\n        return true\n      }\n      else\n        return false\n    }\n  }\n\n  isAuthenticated() {\n    return this.auth\n  }\n}\n","import React from 'react'\nimport './Result.css'\n\ntype ResultProps = {\n  title: string\n  author: string\n  src: string\n  onClick: () => void\n}\n\nconst Result: React.FC<ResultProps> = props => {\n  return (\n    <div className='result' onClick={props.onClick}>\n      <img className='cover' src={props.src} alt={`${props.title} Album Cover`}></img>\n      <div className='info'>\n        <h2 className='title'>{props.title}</h2>\n        <p className='artist'>{props.author}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default Result\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport './SongInput.css'\nimport SearchLogo from '../../images/search.svg'\nimport Result from './searchResult/Result'\nimport { SearchResult } from '../../utils/ContextController'\n\ntype onChange = (event: React.ChangeEvent<HTMLInputElement>) => void\n\ntype SongInputProps = {\n  results: SearchResult\n  onSearch: (query: string) => void\n  onResultClick: (position: number) => void\n  locked: boolean\n}\n\nconst SongInput: React.FC<SongInputProps> = props => {\n  const searchInput = useRef<HTMLInputElement>(null)\n  const [state, setState] = useState('')\n  const [query, setQuery] = useState('')\n\n  const updateSize = useCallback((focused: boolean) => {\n    if (focused && query.length === 0) setState('focused')\n    else if (focused || query.length > 0) setState('focused')\n    else {\n      setState('')\n    }\n  }, [query.length])\n\n  const onSearchClick = useCallback(() => {\n    if (query !== null && query !== '') {\n      props.onSearch(query)\n    }\n  }, [query, props])\n\n  useEffect(() => {\n    const input = searchInput.current;\n    const focus = () => updateSize(true)\n    const focusout = () => updateSize(false)\n    const onKeypress = (e: KeyboardEvent) => {\n      if (e.key === 'Enter') onSearchClick()\n    }\n\n    if (input !== null) {\n      input.addEventListener('focus', focus)\n      input.addEventListener('focusout', focusout)\n      input.addEventListener('keypress', onKeypress)\n    }\n\n    return () => {\n      if(input !== null) {\n        input.removeEventListener('focus', focus)\n        input.removeEventListener('focusout', focusout)\n        input.removeEventListener('keypress', onKeypress)\n      }\n    }\n  }, [onSearchClick, updateSize])\n\n  useEffect(() => {\n    if (props.locked) setState('')\n  }, [props.locked])\n\n  const onQueryChange: onChange = e => {\n    setQuery(e.target.value)\n  }\n\n  const resultElements = props.results.map((result, i) => (\n    <Result key={i} {...result} onClick={() => props.onResultClick(i)} />\n  ))\n\n  return (\n    <div\n      className={`input ${state}`}\n      style={{\n        height: `${88 +\n          64 * props.results.length +\n          (props.results.length ? 8 : 0)}px`\n      }}\n    >\n      <div className='searchBar'>\n        <input\n          type='text'\n          ref={searchInput}\n          value={query}\n          onChange={onQueryChange}\n          placeholder='Search'\n          disabled={props.locked}\n        ></input>\n        <button onClick={onSearchClick}>\n          <img src={SearchLogo} alt=''></img>\n        </button>\n      </div>\n      {!!props.results.length && (\n        <div className='results'>{resultElements}</div>\n      )}\n    </div>\n  )\n}\n\nexport default SongInput\n","import React, { useRef, useEffect } from 'react'\nimport './Roulette.css'\nimport { Howl } from 'howler'\n\ntype RouletteAlbumProps = {\n  position: number\n  src: string\n  shot: boolean\n  load: boolean\n  loading: boolean\n}\n\nconst useLoadSound = (play: boolean) => {\n  const loadSound = useRef<Howl>(\n    new Howl({\n      src: '/audio/load.mp3'\n    })\n  )\n\n  useEffect(() => {\n    if (play) loadSound.current.play()\n  }, [play])\n}\n\nconst useShootSound = (play: boolean, position: number) => {\n  const shotSound = useRef<Howl>(\n    new Howl({\n      src: position === 5 ? '/audio/shot.mp3' : '/audio/blank.mp3'\n    })\n  )\n\n  useEffect(() => {\n    if (play) shotSound.current.play()\n  }, [play])\n}\n\nconst RouletteAlbum: React.FC<RouletteAlbumProps> = props => {\n  useLoadSound(props.loading)\n  useShootSound(props.shot, props.position)\n\n  return (\n    <div\n      className='container'\n      style={{ transform: `rotate(${-60 * props.position}deg)` }}\n    >\n      <div className={`cover ${props.load && 'load'}`}>\n        <img className={props.shot ? 'shot' : ''} src={props.src} alt='' />\n      </div>\n    </div>\n  )\n}\n\nexport default RouletteAlbum\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport { Spotify } from '../../utils/Spoitfy'\nimport './App.css'\nimport SongInput from '../songInput/songInput'\nimport Roulette from '../roulette/Roulette'\nimport ActionButton from '../actionButton/ActionButton'\nimport spin from '../../images/spin.svg'\nimport { TrackController } from '../../utils/ContextController'\nimport WarningDialog from '../warningDialog/WarningDialog'\n\nexport enum RouletteState {\n  IDLE = 'idle',\n  LOAD = 'load',\n  LOADING = 'loading',\n  READY = 'ready',\n  SPIN = 'spin',\n  SPINING = 'spining',\n  SHOT = 'shot'\n}\n\nconst usePlayerOpen = (spotify: Spotify, state: RouletteState, setState: React.Dispatch<React.SetStateAction<RouletteState>>): [boolean, () => void, React.Dispatch<any>] => {\n  const [playerOpen, setPlayerOpen] = useState()\n\n  const checkPlayerOpen = useCallback(() => spotify.hasPlayerOpen().then(isOpen => {setPlayerOpen(isOpen)}),[spotify])\n\n  useEffect(() => {\n    if (state === RouletteState.READY) {\n      if(!playerOpen)\n        checkPlayerOpen()\n      else\n        setState(RouletteState.SPIN)\n    }\n  }, [playerOpen, checkPlayerOpen, state, setState])\n\n\n  return [playerOpen, checkPlayerOpen, setPlayerOpen]\n}\n\nconst App: React.FC = () => {\n  const spotify = useRef(new Spotify())\n  const [state, setState] = useState(RouletteState.IDLE)\n  const [results, setResults] = useState<any>([])\n  const [bullet, setBullet] = useState<any>()\n  const [blank, setBlank] = useState<any>()\n  const controller = useRef(new TrackController(spotify.current, setResults))\n  const [playerOpen, checkPlayerOpen, setPlayerOpen] = usePlayerOpen(spotify.current, state, setState)\n\n  useEffect(() => {\n    if (!spotify.current.isAuthenticated()) spotify.current.authenticateUser()\n  }, [])\n\n  const onResultClick = (position: number): void => {\n    if (blank === undefined) {\n      setBlank(results[position])\n    } else {\n      setBullet(results[position])\n    }\n\n    setResults([])\n    setState(RouletteState.LOAD)\n  }\n\n  const onShoot = (isBullet: boolean): void => {\n    controller.current.play(isBullet ? bullet : blank)\n  }\n\n  const onContinueClick = () => {\n    setState(RouletteState.SPIN)\n    setPlayerOpen(true)\n  }\n\n  return (\n    <div className='app'>\n      <div className='controls'>\n        <SongInput\n          results={controller.current.formatResults(results)}\n          onSearch={(query: string) => controller.current.search(query)}\n          onResultClick={onResultClick}\n          locked={state !== RouletteState.IDLE}\n        />\n        <ActionButton src={spin} visible={state === RouletteState.SHOT} />\n      </div>\n      <Roulette\n        blank={controller.current.getItemSrc(blank)}\n        bullet={controller.current.getItemSrc(bullet)}\n        state={state}\n        setState={setState}\n        chooseBullet={true}\n        onShoot={onShoot}\n      />\n      <WarningDialog visible={!playerOpen && playerOpen !== undefined} onRetryClick={checkPlayerOpen} onContinueClick={onContinueClick} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport './ActionButton.css'\n\ntype ActionButtonProps = {\n  src: string\n  visible: boolean\n}\n\nconst ActionButton: React.FC<ActionButtonProps> = props => {\n  return (\n    <button className={`actionButton ${props.visible ? 'visible' : ''}`}>\n      <img src={props.src} alt=''></img>\n    </button>\n  )\n}\n\nexport default ActionButton\n","import { Spotify } from './Spoitfy'\n\nexport type SearchResult = { title: string; author: string; src: string }[]\n\nexport interface IContextController {\n  search(query: string): void\n}\n\nexport class ContextController<T> {\n  constructor(\n    protected spotify: Spotify,\n    protected setResults: React.Dispatch<React.SetStateAction<T[]>>\n  ) {}\n}\n\nexport class TrackController extends ContextController<SpotifyApi.TrackObjectFull> {\n  search(query: string): void {\n    this.spotify.searchTrack(query).then(data => {\n      this.setResults(data.tracks.items.slice(0, 3))\n    })\n  }\n\n  formatResults(results: SpotifyApi.TrackObjectFull[]): SearchResult {\n    return results.map(item => ({\n      title: item.name,\n      author: item.artists[0].name,\n      src: item.album.images[0].url\n    }))\n  }\n\n  getItemSrc(item: SpotifyApi.TrackObjectFull): string {\n    return item === undefined ? '' : item.album.images[0].url\n  }\n\n  play(track: SpotifyApi.TrackObjectFull): void {\n    this.spotify.play({uris: [track.uri]})\n  }\n}\n","import React from 'react'\nimport './WarningDialog.css'\nimport warning from '../../images/warning.svg'\n\ntype WarningDialogProps = {\n  visible: boolean\n  onRetryClick: () => void\n  onContinueClick: () => void\n}\n\nconst WarningDialog: React.FC<WarningDialogProps> = props => {\n  return (\n    <div className={`warningDialog ${props.visible ? 'visible' : 'hidden'}`}>\n      <img src={warning} alt={'Warning'}></img>\n      <h2>Spotify not found</h2>\n      <p>\n        Make sure you have spotify open and press retry. If you\n        continue no song will play.\n      </p>\n      <button className='retry' onClick={props.onRetryClick}>\n        Retry\n      </button>\n      <button className='continue' onClick={props.onContinueClick}>continue</button>\n    </div>\n  )\n}\n\nexport default WarningDialog\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}